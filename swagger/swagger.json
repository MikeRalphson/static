{
	"swagger": "2.0",
	"info": {
		"version": "1.0.0",
		"title": "BBC Nitro API",
		"x-logo": {
			"url": "https://developer.bbc.co.uk/sites/default/files/Nitro%20On%20White.png"
		},
		"x-apiClientRegistration": {
			"url": "https://developer.bbc.co.uk/user/register"
		},
		"description": "BBC Nitro is the BBC's application programming interface (API) for BBC Programmes Metadata.",
		"termsOfService": "http://www.bbc.co.uk/terms/",
		"contact": {
			"name": "Open Nitro Project",
			"email": "nitro@bbc.co.uk",
			"url": "http://developer.bbc.co.uk/"
		},
		"license": {
			"name": "Nitro Public License",
			"url": "https://developer.bbc.co.uk/nitropubliclicence/"
		}
	},
	"externalDocs": {
		"description": "Nitro for developers",
		"url": "https://developer.bbc.co.uk/nitro"
	},
	"host": "programmes.api.bbc.com",
	"basePath": "/nitro/api",
	"tags": [
		{
			"name": "feeds",
			"description": "Nitro data feeds"
		},
		{
			"name": "schema",
			"description": "Nitro metadata"
		}
	],
	"schemes": [
		"http",
		"https"
	],
	"consumes": [
		"application/json"
	],
	"produces": [
		"application/json",
		"application/xml"
	],
	"paths": {
		"/programmes": {
			"get": {
				"description": "Fetch metadata about Programmes (brands, series, episodes, clips). By applying different filter restrictions this feed can be used in many ways, for example to retrieve all series belonging to a brand, all the episodes and/or clips for a specific series, or any TLEO objects for a masterbrand. Other filters permit restricting to specific formats and/or genres, and you can request specific versions (for example Signed or Audio-Described). Parameters may be combined in any way suitable for your application.",
				"tags": [
					"feeds"
				],
				"summary": "Start here for programmes metadata: Brands, Series, Episodes and Clips",
				"operationId": "listProgrammes",
				"parameters": [
					{
						"name": "sort",
						"in": "query",
						"description": "Sorts:\n* sort numerically by position in group, ascending\n* sort alphabetically by PID, descending\n* sort numerically by position, ascending\n* sort by promotion rank, ascending\n* sort chronologically by release date, descending\n* sort by weighting of search term (use with q parameter)\n* sort chronologically by scheduled start time/date, ascending\n* sort alphabetically by title, ascending\n* sort by title librarian style (ignoring leading 'The', 'A', etc), ascending\n* sort by root pid and then preorder tree sort. Requires entities to have release date.\n* sort numerically by number of views (most popular first)\n",
						"type": "string",
						"required": false,
						"enum": [
							"group_position",
							"pid",
							"position",
							"promotion",
							"release_date",
							"relevance",
							"scheduled_start",
							"strict_title",
							"title",
							"tree",
							"views"
						]
					},
					{
						"name": "sort_direction",
						"in": "query",
						"description": "Sort direction",
						"type": "string",
						"required": false,
						"enum": [
							"ascending",
							"descending"
						]
					},
					{
						"name": "mixin",
						"in": "query",
						"description": "Mixins:\n* mixin to return the alternate images for a programme\n* mixin to return ancestor programme titles\n* mixin to return programme availability information\n* mixin to return information about programmes that are currently available on demand\n* mixin to return information about contributors to a programme\n* mixin to return original version duration in programme concept entities\n* mixin to return list of genre groupings\n* mixin to add image information for a programme\n* mixin to add embeddable information for a programme\n* mixin to return the programmes which appear before and after a programme (as determined by the sort applied in the request)\n* mixin to return information about related links to a programme\n* mixin to return information about programmes that are currently available as webcasts\n",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"alternate_images",
							"ancestor_titles",
							"availability",
							"available_versions",
							"contributions",
							"duration",
							"genre_groupings",
							"images",
							"is_embeddable",
							"previous_next",
							"related_links",
							"available_webcasts"
						]
					},
					{
						"name": "unstable_mixin",
						"in": "query",
						"description": "Unstable mixins:\n* mixin to return information about programmes that are currently available as webcasts\n",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"available_webcasts"
						]
					},
					{
						"name": "audio_described",
						"in": "query",
						"description": "filter for subset of programmes that are audio-described",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"true",
							"false"
						]
					},
					{
						"name": "availability",
						"in": "query",
						"description": "filter for subset of programmes that have availability",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"available",
							"pending"
						]
					},
					{
						"name": "availability_entity_type",
						"in": "query",
						"description": "additional filter when availability=available",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"episode",
							"clip"
						]
					},
					{
						"name": "availability_type",
						"in": "query",
						"description": "filter for a subset of programmes that are available for a given type",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"ondemand",
							"webcast"
						]
					},
					{
						"name": "children_of",
						"in": "query",
						"description": "filter for subset of programmes that have PID as immediate parent",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "descendants_of",
						"in": "query",
						"description": "filter for subset of programmes that have PID as ancestor",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "duration",
						"in": "query",
						"description": "filter for subset of programmes that have given duration",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"short",
							"medium",
							"long"
						]
					},
					{
						"name": "entity_type",
						"in": "query",
						"description": "filter for subset of programmes that have given entity type",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"brand",
							"series",
							"episode",
							"clip"
						]
					},
					{
						"name": "format",
						"in": "query",
						"description": "filter for subset of programmes with format",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "genre",
						"in": "query",
						"description": "filter for subset of programmes with genre",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "group",
						"in": "query",
						"description": "filter for subset of programmes which belong to the given group pid",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "initial_letter",
						"in": "query",
						"description": "filter for subset of programmes with title beginning with initial letter librarian style (ignoring leading 'The', 'An' (Welsh), etc) 0-9 a-z",
						"type": "string",
						"minLength": 1,
						"maxLength": 1,
						"required": false
					},
					{
						"name": "initial_letter_end",
						"in": "query",
						"description": "Programmes with (librarian) titles whose initial letter is equal/before given letter. Use with initial_letter_start for a range",
						"type": "string",
						"minLength": 1,
						"maxLength": 1,
						"required": false
					},
					{
						"name": "initial_letter_start",
						"in": "query",
						"description": "Programmes with (librarian) titles whose initial letter is equal/after given letter. Use with initial_letter_end for range.",
						"type": "string",
						"minLength": 1,
						"maxLength": 1,
						"required": false
					},
					{
						"name": "initial_letter_strict",
						"in": "query",
						"description": "filter for subset of programmes with title beginning with initial letter",
						"type": "array",
						"items": {
							"type": "string",
							"minLength": 1,
							"maxLength": 1
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "item",
						"in": "query",
						"description": "filter for subset of programmes with linked to versions which have the given item pids",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "master_brand",
						"in": "query",
						"description": "filter for subset of programmes with master_brand",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "media_set",
						"in": "query",
						"description": "filter for subset of programmes with media set",
						"type": "string",
						"required": false
					},
					{
						"name": "media_type",
						"in": "query",
						"description": "filter for subset of programmes with media type",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"audio",
							"audio_video"
						]
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "partner_id",
						"in": "query",
						"description": "filter for programmes by partner ID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "partner_pid",
						"in": "query",
						"description": "filter for programmes by partner PID",
						"type": "array",
						"default": "s0000001",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "payment_type",
						"in": "query",
						"description": "filter for a subset of programmes that are of the given payment_type",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"free",
							"bbcstore",
							"uscansvod"
						]
					},
					{
						"name": "people",
						"in": "query",
						"description": "filter for subset of programmes with contributions by given people PID",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "pid",
						"in": "query",
						"description": "filter for subset of programmes having given PID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "promoted_for",
						"in": "query",
						"description": "filter for subset of programmes which are promoted for given service",
						"type": "string",
						"required": false
					},
					{
						"name": "q",
						"in": "query",
						"description": "filter for subset of programmes matching supplied keyword/phrase (boolean operators permitted)",
						"type": "string",
						"required": false
					},
					{
						"name": "signed",
						"in": "query",
						"description": "filter for subset of programmes that are signed",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"exclusive",
							"inclusive",
							"exclude"
						]
					},
					{
						"name": "tag_name",
						"in": "query",
						"description": "filter for subset of programmes with tag",
						"type": "string",
						"required": false
					},
					{
						"name": "tag_scheme",
						"in": "query",
						"description": "filter for subset of programmes with a tag",
						"type": "string",
						"required": false
					},
					{
						"name": "tleo",
						"in": "query",
						"description": "filter for subset of programmes that are TLEOs",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"true",
							"false"
						]
					},
					{
						"name": "version",
						"in": "query",
						"description": "filter for subset of programmes with given PID as one of their versions",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/availabilities": {
			"get": {
				"description": "Discover details of on-demand availability for programmes and their versions",
				"tags": [
					"feeds"
				],
				"summary": "Discover details of on-demand availability for programmes and their versions",
				"operationId": "listAvailability",
				"parameters": [
					{
						"name": "sort",
						"in": "query",
						"description": "Sorts:\n* sort chronologically by scheduled start time/date, ascending\n",
						"type": "string",
						"required": false,
						"enum": [
							"scheduled_start"
						]
					},
					{
						"name": "sort_direction",
						"in": "query",
						"description": "Sort direction",
						"type": "string",
						"required": false,
						"enum": [
							"ascending",
							"descending"
						]
					},
					{
						"name": "availability",
						"in": "query",
						"description": "filter for subset of availabilities",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"available"
						]
					},
					{
						"name": "descendants_of",
						"in": "query",
						"description": "filter for subset of availabilities that have PID as ancestor",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "media_set",
						"in": "query",
						"description": "filter for subset of availabilities with media set",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "territory",
						"in": "query",
						"description": "filter for availabilities in given territory",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"uk",
							"nonuk",
							"world"
						]
					},
					{
						"name": "debug",
						"in": "query",
						"description": "Turn on debug information (undocumented)",
						"type": "boolean",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/broadcasts": {
			"get": {
				"description": "Fetch metadata about linear Broadcasts and Services, allowing the generation of Television and Radio schedules and other datasets for broadcast items. Use /schedules instead of this feed as it is more efficient. Broadcasts will be deprecated in the future.",
				"tags": [
					"feeds"
				],
				"summary": "Build schedules and find metadata for TV and radio broadcasts",
				"operationId": "listBroadcasts",
				"parameters": [
					{
						"name": "sort",
						"in": "query",
						"description": "Sorts:\n* sort chronologically by scheduled start time/date, ascending\n",
						"type": "string",
						"required": false,
						"enum": [
							"start_date"
						]
					},
					{
						"name": "sort_direction",
						"in": "query",
						"description": "Sort direction",
						"type": "string",
						"required": false,
						"enum": [
							"ascending",
							"descending"
						]
					},
					{
						"name": "mixin",
						"in": "query",
						"description": "Mixins:\n* return ancestor programme titles\n",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"titles"
						]
					},
					{
						"name": "authority",
						"in": "query",
						"description": "filter for subset of broadcasts that have given authority",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "descendants_of",
						"in": "query",
						"description": "filter for subset of broadcasts that are descendants of the given programme PID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "end_from",
						"in": "query",
						"description": "filter for subset of broadcasts that end on or later than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					},
					{
						"name": "end_to",
						"in": "query",
						"description": "filter for subset of broadcasts that end on or earlier than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					},
					{
						"name": "format",
						"in": "query",
						"description": "filter for subset of broadcasts that are classified in the given format ID",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "genre",
						"in": "query",
						"description": "filter for subset of broadcasts that are classified in the given genre ID",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "id",
						"in": "query",
						"description": "filter for subset of broadcasts that have given identifier",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "item",
						"in": "query",
						"description": "filter for subset of broadcasts with the given item performed on it",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "people",
						"in": "query",
						"description": "filter for subset of broadcasts that have given contributor",
						"type": "string",
						"required": false
					},
					{
						"name": "pid",
						"in": "query",
						"description": "filter for subset of broadcasts having given PID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "q",
						"in": "query",
						"description": "filter for subset of broadcasts matching supplied keyword/phrase (boolean operators permitted)",
						"type": "string",
						"required": false
					},
					{
						"name": "schedule_day",
						"in": "query",
						"description": "filter for subset of broadcasts that start on the specified day (BBC time)",
						"type": "string",
						"format": "date",
						"required": false
					},
					{
						"name": "schedule_day_from",
						"in": "query",
						"description": "filter for subset of broadcasts that start on or after the specified day (BBC time)",
						"type": "string",
						"format": "date",
						"required": false
					},
					{
						"name": "schedule_day_to",
						"in": "query",
						"description": "filter for subset of broadcasts that start on or before the specified day (BBC time)",
						"type": "string",
						"format": "date",
						"required": false
					},
					{
						"name": "service_master_brand",
						"in": "query",
						"description": "filter for subset of broadcasts with given service master brand",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "sid",
						"in": "query",
						"description": "filter for subset of broadcasts that are on the specified linear service",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "start_from",
						"in": "query",
						"description": "filter for subset of broadcasts that start on or later than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					},
					{
						"name": "start_to",
						"in": "query",
						"description": "filter for subset of broadcasts that start on or earlier than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					},
					{
						"name": "version",
						"in": "query",
						"description": "filter for subset of broadcasts with given PID as their parent version",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/groups": {
			"get": {
				"description": "Long-lived curated collections of programmes and more, including Collections, Seasons, Franchises and Galleries",
				"tags": [
					"feeds"
				],
				"summary": "Find metadata for curated groups: seasons, collections, galleries or franchises",
				"operationId": "listGroups",
				"parameters": [
					{
						"name": "sort",
						"in": "query",
						"description": "Sorts:\n* sort alphabetically by PID\n",
						"type": "string",
						"required": false,
						"enum": [
							"pid"
						]
					},
					{
						"name": "sort_direction",
						"in": "query",
						"description": "Sort direction",
						"type": "string",
						"required": false,
						"enum": [
							"descending"
						]
					},
					{
						"name": "mixin",
						"in": "query",
						"description": "Mixins:\n* mixin to return the alternate images for a group\n* mixin to return links to programme entities that group belongs to\n* mixin to add image information for a group\n* mixin to return related links for the group\n",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"alternate_images",
							"group_for",
							"images",
							"related_links"
						]
					},
					{
						"name": "for_descendants_of",
						"in": "query",
						"description": "filter for groups related to given programme or its descendants",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "for_programme",
						"in": "query",
						"description": "filter for subset of groups directly related to a given programme",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "group",
						"in": "query",
						"description": "filter for subset of groups which belong to the given group pid",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "group_type",
						"in": "query",
						"description": "filter for subset of groups that have the given group type",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"collection",
							"franchise",
							"gallery",
							"season"
						]
					},
					{
						"name": "member",
						"in": "query",
						"description": "filter for subset of groups which contain an entity with the given pid as a member",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "partner_id",
						"in": "query",
						"description": "filter for groups by partner ID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "partner_pid",
						"in": "query",
						"description": "filter for groups by partner PID",
						"type": "array",
						"default": "s0000001",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "pid",
						"in": "query",
						"description": "filter for subset of seasons, collections, galleries or franchises having given PID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "q",
						"in": "query",
						"description": "filter for subset of groups matching supplied keyword/phrase (boolean operators permitted)",
						"type": "string",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/images": {
			"get": {
				"description": "Find metadata for images, particularly those in galleries",
				"tags": [
					"feeds"
				],
				"summary": "Find metadata for images",
				"operationId": "listImages",
				"parameters": [
					{
						"name": "sort",
						"in": "query",
						"description": "Sorts:\n* sort numerically by position, ascending only\n* sort alphabetically by PID\n",
						"type": "string",
						"required": false,
						"enum": [
							"group_position",
							"pid"
						]
					},
					{
						"name": "sort_direction",
						"in": "query",
						"description": "Sort direction",
						"type": "string",
						"required": false,
						"enum": [
							"ascending",
							"descending"
						]
					},
					{
						"name": "group",
						"in": "query",
						"description": "filter for images belonging to the given group (i.e. Gallery)",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "image_type",
						"in": "query",
						"description": "filter for images by type",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"standard",
							"podcast",
							"store",
							"portrait",
							"letterbox"
						]
					},
					{
						"name": "is_alternate_image_for",
						"in": "query",
						"description": "filter for alternate images by entity PID",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "is_image_for",
						"in": "query",
						"description": "filter for images by entity PID",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "partner_id",
						"in": "query",
						"description": "filter for images by partner ID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "partner_pid",
						"in": "query",
						"description": "filter for images by partner PID",
						"type": "array",
						"default": "s0000001",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "pid",
						"in": "query",
						"description": "filter for subset of images having given PID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "q",
						"in": "query",
						"description": "filter for subset of images matching supplied keyword/phrase (boolean operators permitted)",
						"type": "string",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/items": {
			"get": {
				"description": "Look inside programmes to find segments: chapters, tracks and more",
				"tags": [
					"feeds"
				],
				"summary": "Look inside programmes to find segments: chapters, tracks and more",
				"operationId": "listItems",
				"parameters": [
					{
						"name": "sort",
						"in": "query",
						"description": "Sorts:\n* sort by pid, descending\n",
						"type": "string",
						"required": false,
						"enum": [
							"pid"
						]
					},
					{
						"name": "sort_direction",
						"in": "query",
						"description": "Sort direction",
						"type": "string",
						"required": false,
						"enum": [
							"descending"
						]
					},
					{
						"name": "mixin",
						"in": "query",
						"description": "Mixins:\n* mixin to return information about contributors to items\n* mixin to add image information for an item\n* mixin to return programme segment events, works in conjunction with programme or segment_event filters\n",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"contributions",
							"images",
							"play_event"
						]
					},
					{
						"name": "authority",
						"in": "query",
						"description": "filter for subset of items that have an ID issued by the given authority",
						"type": "string",
						"required": false
					},
					{
						"name": "id",
						"in": "query",
						"description": "filter for subset of items having given ID",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "id_type",
						"in": "query",
						"description": "filter for subset of items that have given an ID of the given type",
						"type": "string",
						"required": false
					},
					{
						"name": "item_type",
						"in": "query",
						"description": "filter for specific type(s) of items",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"chapter",
							"highlight",
							"music",
							"speech",
							"other"
						]
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "partner_id",
						"in": "query",
						"description": "filter for items by partner ID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "partner_pid",
						"in": "query",
						"description": "filter for items by partner PID",
						"type": "array",
						"default": "s0000001",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "people",
						"in": "query",
						"description": "filter for subset of items that have specified person involved",
						"type": "string",
						"required": false
					},
					{
						"name": "pid",
						"in": "query",
						"description": "filter for subset of items matching one of the given PIDs",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "programme",
						"in": "query",
						"description": "filter for subset of items that are part of the given programme",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "q",
						"in": "query",
						"description": "filter for subset of items matching supplied keyword/phrase (boolean operators permitted)",
						"type": "string",
						"required": false
					},
					{
						"name": "segment_event",
						"in": "query",
						"description": "filter for item with the given segment_event",
						"type": "string",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/master_brands": {
			"get": {
				"description": "List all Master Brands",
				"tags": [
					"feeds"
				],
				"summary": "List all Master Brands",
				"operationId": "listMasterbrands",
				"parameters": [
					{
						"name": "sort",
						"in": "query",
						"description": "Sorts:\n* sort by mid, ascending\n",
						"type": "string",
						"required": false,
						"enum": [
							"mid"
						]
					},
					{
						"name": "sort_direction",
						"in": "query",
						"description": "Sort direction",
						"type": "string",
						"required": false,
						"enum": [
							"ascending"
						]
					},
					{
						"name": "mixin",
						"in": "query",
						"description": "Mixins:\n* mixin to add image information for a masterbrand\n",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"images"
						]
					},
					{
						"name": "mid",
						"in": "query",
						"description": "filter for subset of masterbrands that have given identifier",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "partner_id",
						"in": "query",
						"description": "filter for masterbrands by partner ID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "partner_pid",
						"in": "query",
						"description": "filter for masterbrands by partner PID",
						"type": "array",
						"default": "s0000001",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "q",
						"in": "query",
						"description": "filter for subset of masterbrands matching supplied keyword/phrase (boolean operators permitted)",
						"type": "string",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/people": {
			"get": {
				"description": "The People feed allows you to search for the people and groups that contribute to programmes. This is the starting point for cast and crew credits, as well as finding contributors using external IDs (such as Wikipedia URLs)",
				"tags": [
					"feeds"
				],
				"summary": "Find the people behind and in programmes: cast, crew, guests and more",
				"operationId": "listPeople",
				"parameters": [
					{
						"name": "authority",
						"in": "query",
						"description": "filter for subset of people that have an ID issued by the given authority",
						"type": "string",
						"required": false
					},
					{
						"name": "has_external_id",
						"in": "query",
						"description": "filter for people who have an external identifier",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"true",
							"false"
						]
					},
					{
						"name": "id",
						"in": "query",
						"description": "filter for subset of people having given ID",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "id_type",
						"in": "query",
						"description": "filter for subset of people that have given an ID of the given type",
						"type": "string",
						"required": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "partner_id",
						"in": "query",
						"description": "filter for people by partner ID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "partner_pid",
						"in": "query",
						"description": "filter for people by partner PID",
						"type": "array",
						"default": "s0000001",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "pid",
						"in": "query",
						"description": "filter for subset of people having given PID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "programme",
						"in": "query",
						"description": "filter for subset of people that have contributed to the given programme pid",
						"type": "string",
						"required": false
					},
					{
						"name": "q",
						"in": "query",
						"description": "filter for subset of people matching supplied keyword/phrase (boolean operators permitted)",
						"type": "string",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/pips": {
			"get": {
				"description": "Look inside pips entities",
				"tags": [
					"feeds"
				],
				"summary": "Look inside pips entities",
				"operationId": "listPips",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "q",
						"in": "query",
						"description": "filter for subset of programmes matching supplied keyword/phrase (boolean operators permitted)",
						"type": "string",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/promotions": {
			"get": {
				"description": "Details of short-term editorially curated \"promotions\", for instance those programmes featured on iPlayer today",
				"tags": [
					"feeds"
				],
				"summary": "Discover metadata for content promotions",
				"operationId": "listPromotions",
				"parameters": [
					{
						"name": "mixin",
						"in": "query",
						"description": "Mixins:\n* mixin to return information about related links to a promotion\n",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"related_links"
						]
					},
					{
						"name": "context",
						"in": "query",
						"description": "filter for subset of promotions belonging to a given context",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "partner_id",
						"in": "query",
						"description": "filter for promotions by partner ID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "partner_pid",
						"in": "query",
						"description": "filter for promotions by partner PID",
						"type": "array",
						"default": "s0000001",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "pid",
						"in": "query",
						"description": "filter for subset of promotions having given PID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "promoted_by",
						"in": "query",
						"description": "filter for subset of promotions having given promoted by",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "promoted_for",
						"in": "query",
						"description": "filter for subset of promotions having given promoted for",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "q",
						"in": "query",
						"description": "filter for subset of promotions matching supplied keyword/phrase (boolean operators permitted)",
						"type": "string",
						"required": false
					},
					{
						"name": "status",
						"in": "query",
						"description": "filter for subset of promotions with status",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"current"
						]
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/schedules": {
			"get": {
				"description": "Dates, Times, Schedules: when and where are programmes being shown?",
				"tags": [
					"feeds"
				],
				"summary": "Build schedules and find metadata for TV and radio broadcasts and webcasts",
				"operationId": "listSchedules",
				"parameters": [
					{
						"name": "sort",
						"in": "query",
						"description": "Sorts:\n* sort chronologically by scheduled start time/date, ascending\n",
						"type": "string",
						"required": false,
						"enum": [
							"start_date"
						]
					},
					{
						"name": "sort_direction",
						"in": "query",
						"description": "Sort direction",
						"type": "string",
						"required": false,
						"enum": [
							"ascending",
							"descending"
						]
					},
					{
						"name": "mixin",
						"in": "query",
						"description": "Mixins:\n* return ancestor programme titles\n* mixin to add image information for broadcasts and webcasts\n",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"ancestor_titles",
							"images"
						]
					},
					{
						"name": "authority",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that have given authority",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "descendants_of",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that are descendants of the given programme PID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "end_from",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that end on or later than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					},
					{
						"name": "end_to",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that end on or earlier than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					},
					{
						"name": "format",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that are classified in the given format ID",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "genre",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that are classified in the given genre ID",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "group",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that have programmes in the given group",
						"type": "string",
						"minLength": 8,
						"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
						"required": false
					},
					{
						"name": "id",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that have given identifier",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "id_type",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that have given id type",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "item",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts with the given item performed on it",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "partner_id",
						"in": "query",
						"description": "filter for broadcasts and webcasts by partner ID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "partner_pid",
						"in": "query",
						"description": "filter for broadcasts and webcasts by partner PID",
						"type": "array",
						"default": "s0000001",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "people",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that have given contributor",
						"type": "string",
						"required": false
					},
					{
						"name": "pid",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts having given PID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "q",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts matching supplied keyword/phrase (boolean operators permitted)",
						"type": "string",
						"required": false
					},
					{
						"name": "repeat",
						"in": "query",
						"description": "filter to show either only repeats or non-repeats",
						"type": "boolean",
						"required": false
					},
					{
						"name": "schedule_day",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that start on the specified day (BBC time)",
						"type": "string",
						"format": "date",
						"required": false
					},
					{
						"name": "schedule_day_from",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that start on or after the specified day (BBC time)",
						"type": "string",
						"format": "date",
						"required": false
					},
					{
						"name": "schedule_day_to",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that start on or before the specified day (BBC time)",
						"type": "string",
						"format": "date",
						"required": false
					},
					{
						"name": "service_master_brand",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts with given service master brand",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "sid",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that are on the specified linear service",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "start_from",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that start on or later than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					},
					{
						"name": "start_to",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts that start on or earlier than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					},
					{
						"name": "version",
						"in": "query",
						"description": "filter for subset of broadcasts and webcasts with given PID as their parent version",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/services": {
			"get": {
				"description": "The services feed exposes the linear broadcast \"services\" from PIPs. These are the actual services which broadcast programmes (eg bbc_one_oxford is the service for BBC One in Oxford).",
				"tags": [
					"feeds"
				],
				"summary": "Information about the linear services used for broadcast transmissions",
				"operationId": "listServices",
				"parameters": [
					{
						"name": "end_from",
						"in": "query",
						"description": "Return services that end on or later than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					},
					{
						"name": "end_to",
						"in": "query",
						"description": "filter for subset of broadcasts that end on or earlier than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					},
					{
						"name": "mid",
						"in": "query",
						"description": "filter for services by masterbrand MID",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "partner_id",
						"in": "query",
						"description": "filter for services by partner ID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "partner_pid",
						"in": "query",
						"description": "filter for services by partner PID",
						"type": "array",
						"default": "s0000001",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "q",
						"in": "query",
						"description": "filter for subset of services matching supplied keyword/phrase (boolean operators permitted)",
						"type": "string",
						"required": false
					},
					{
						"name": "service_type",
						"in": "query",
						"description": "filter for specified type of linear services. one of: TV, Local Radio, National Radio, Regional Radio",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"TV",
							"Local Radio",
							"National Radio",
							"Regional Radio",
							"Interactive"
						]
					},
					{
						"name": "sid",
						"in": "query",
						"description": "filter for specified linear service",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "start_from",
						"in": "query",
						"description": "Return services that start on or later than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					},
					{
						"name": "start_to",
						"in": "query",
						"description": "Return services that start earlier than the specified datetime",
						"type": "string",
						"format": "date-time",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/versions": {
			"get": {
				"description": "The versions feed exposes editorial \"Versions\" of programmes. These are concepts used to capture different presentations of an overall programme: for example, versions of a programme may include one with sign language, one with audio description, one edited for content and more. Versions are also important to understand for broadcasts: a linear broadcast or an ondemand is always of a specific version, not merely of a programme.",
				"tags": [
					"feeds"
				],
				"summary": "Metadata on editorial programme versions: original, signed, audio-described, etc",
				"operationId": "listVersions",
				"parameters": [
					{
						"name": "availability",
						"in": "query",
						"description": "filter for subset of versions that have availability",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"available"
						]
					},
					{
						"name": "descendants_of",
						"in": "query",
						"description": "filter for subset of versions having given programme PID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "media_set",
						"in": "query",
						"description": "filter for subset of versions with availability in the given media set",
						"type": "array",
						"items": {
							"type": "string"
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "page",
						"in": "query",
						"description": "which page of results to return",
						"type": "integer",
						"default": 1,
						"minimum": 1,
						"required": false
					},
					{
						"name": "page_size",
						"in": "query",
						"description": "number of results in each page",
						"type": "integer",
						"default": 10,
						"maximum": 300,
						"required": false
					},
					{
						"name": "partner_id",
						"in": "query",
						"description": "filter for versions by partner ID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "partner_pid",
						"in": "query",
						"description": "filter for versions by partner PID",
						"type": "array",
						"default": "s0000001",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					},
					{
						"name": "payment_type",
						"in": "query",
						"description": "filter for a subset of versions that are of the given payment_type",
						"type": "array",
						"collectionFormat": "multi",
						"items": {
							"format": "string"
						},
						"required": false,
						"enum": [
							"free",
							"bbcstore",
							"uscansvod"
						]
					},
					{
						"name": "pid",
						"in": "query",
						"description": "filter for subset of versions having given PID",
						"type": "array",
						"items": {
							"type": "string",
							"pattern": "^([0-9,a-d,f-h,j-n,p-t,v-z]){8,}$",
							"minLength": 8
						},
						"collectionFormat": "multi",
						"required": false
					}
				],
				"responses": {
					"200": {
						"description": "Nitro response",
						"schema": {
							"$ref": "#/definitions/nitro"
						}
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/": {
			"get": {
				"description": "Get API definition",
				"summary": "Get API definition",
				"tags": [
					"schema"
				],
				"operationId": "getAPI",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Nitro response"
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		},
		"/schema": {
			"get": {
				"description": "Get Schema definition",
				"summary": "Get Schema definition",
				"tags": [
					"schema"
				],
				"operationId": "getXSD",
				"parameters": [],
				"responses": {
					"200": {
						"description": "Nitro response"
					},
					"default": {
						"description": "Unexpected error",
						"schema": {
							"$ref": "#/definitions/ErrorModel"
						}
					}
				}
			}
		}
	},
	"definitions": {
		"pagination": {
			"type": "object",
			"properties": {
				"previous": {
					"$ref": "#/definitions/previous"
				},
				"next": {
					"$ref": "#/definitions/next"
				}
			},
			"additionalProperties": false
		},
		"next": {
			"type": "object",
			"properties": {
				"href": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				}
			},
			"required": [
				"href"
			],
			"additionalProperties": false
		},
		"previous": {
			"type": "object",
			"properties": {
				"href": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				}
			},
			"required": [
				"href"
			],
			"additionalProperties": false
		},
		"results": {
			"type": "object",
			"properties": {
				"page_size": {
					"type": "integer"
				},
				"music": {
					"$ref": "#/definitions/music"
				},
				"clip": {
					"$ref": "#/definitions/clip"
				},
				"series": {
					"$ref": "#/definitions/series"
				},
				"episode": {
					"$ref": "#/definitions/episode"
				},
				"page": {
					"type": "integer"
				},
				"total": {
					"type": "integer"
				},
				"brand": {
					"$ref": "#/definitions/brand"
				},
				"speech": {
					"$ref": "#/definitions/speech"
				},
				"gallery": {
					"$ref": "#/definitions/gallery"
				},
				"window": {
					"$ref": "#/definitions/window"
				},
				"season": {
					"$ref": "#/definitions/season"
				},
				"version_group": {
					"$ref": "#/definitions/version_group"
				},
				"other": {
					"$ref": "#/definitions/other"
				},
				"availability": {
					"$ref": "#/definitions/availability"
				},
				"image": {
					"$ref": "#/definitions/image"
				},
				"contributor": {
					"$ref": "#/definitions/contributor"
				},
				"more_than": {
					"type": "integer"
				},
				"chapter": {
					"$ref": "#/definitions/chapter"
				},
				"highlight": {
					"$ref": "#/definitions/highlight"
				},
				"promotion": {
					"$ref": "#/definitions/promotion"
				},
				"collection": {
					"$ref": "#/definitions/collection"
				},
				"service": {
					"$ref": "#/definitions/service"
				},
				"master_brand": {
					"$ref": "#/definitions/master_brand"
				},
				"franchise": {
					"$ref": "#/definitions/franchise"
				},
				"broadcast": {
					"$ref": "#/definitions/broadcast"
				}
			},
			"additionalProperties": false,
			"required": [
				"page",
				"page_size"
			]
		},
		"promotion": {
			"type": "object",
			"properties": {
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"updated_time": {
					"$ref": "#/definitions/updated_time"
				},
				"title": {
					"$ref": "#/definitions/title"
				},
				"start_time": {
					"$ref": "#/definitions/start_time"
				},
				"end_time": {
					"$ref": "#/definitions/end_time"
				},
				"synopses": {
					"$ref": "#/definitions/synopses"
				},
				"uri": {
					"$ref": "#/definitions/uri"
				},
				"priority": {
					"$ref": "#/definitions/priority"
				},
				"promoted_by": {
					"$ref": "#/definitions/promoted_by"
				},
				"promoted_for": {
					"$ref": "#/definitions/promoted_for"
				},
				"context": {
					"$ref": "#/definitions/context"
				},
				"status": {
					"$ref": "#/definitions/status"
				},
				"url": {
					"$ref": "#/definitions/url"
				},
				"promotion_of": {
					"$ref": "#/definitions/promotion_of"
				},
				"related_links": {
					"$ref": "#/definitions/related_links"
				}
			},
			"required": [
				"pid",
				"partner",
				"updated_time"
			],
			"additionalProperties": false
		},
		"brand": {
			"type": "object",
			"properties": {
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"updated_time": {
					"$ref": "#/definitions/updated_time"
				},
				"embargoed": {
					"$ref": "#/definitions/embargoed"
				},
				"title": {
					"$ref": "#/definitions/title"
				},
				"synopses": {
					"$ref": "#/definitions/synopses"
				},
				"uri": {
					"$ref": "#/definitions/uri"
				},
				"franchises": {
					"$ref": "#/definitions/franchises"
				},
				"items_for": {
					"$ref": "#/definitions/items_for"
				},
				"expected_child_count": {
					"$ref": "#/definitions/expected_child_count"
				},
				"programme_formats": {
					"$ref": "#/definitions/programme_formats"
				},
				"is_embeddable": {
					"$ref": "#/definitions/is_embeddable"
				},
				"related_links": {
					"$ref": "#/definitions/related_links"
				},
				"genre_groupings": {
					"$ref": "#/definitions/genre_groupings"
				},
				"image_link": {
					"$ref": "#/definitions/image_link"
				},
				"release_date_group": {
					"$ref": "#/definitions/release_date_group"
				},
				"master_brand_link": {
					"$ref": "#/definitions/master_brand_link"
				},
				"images_mixin": {
					"$ref": "#/definitions/images_mixin"
				},
				"alternate_images_mixin": {
					"$ref": "#/definitions/alternate_images_mixin"
				},
				"contributions_mixin": {
					"$ref": "#/definitions/contributions_mixin"
				},
				"previous_next_mixin": {
					"$ref": "#/definitions/previous_next_mixin"
				},
				"availability_mixin": {
					"$ref": "#/definitions/availability_mixin"
				}
			},
			"required": [
				"pid",
				"partner",
				"updated_time",
				"embargoed"
			],
			"additionalProperties": false
		},
		"series": {
			"type": "object",
			"properties": {
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"updated_time": {
					"$ref": "#/definitions/updated_time"
				},
				"embargoed": {
					"$ref": "#/definitions/embargoed"
				},
				"title": {
					"$ref": "#/definitions/title"
				},
				"synopses": {
					"$ref": "#/definitions/synopses"
				},
				"uri": {
					"$ref": "#/definitions/uri"
				},
				"series_of": {
					"$ref": "#/definitions/series_of"
				},
				"ancestors": {
					"$ref": "#/definitions/ancestors"
				},
				"items_for": {
					"$ref": "#/definitions/items_for"
				},
				"expected_child_count": {
					"$ref": "#/definitions/expected_child_count"
				},
				"programme_formats": {
					"$ref": "#/definitions/programme_formats"
				},
				"is_embeddable": {
					"$ref": "#/definitions/is_embeddable"
				},
				"ancestors_titles": {
					"$ref": "#/definitions/ancestors_titles"
				},
				"ancestor_titles": {
					"$ref": "#/definitions/ancestor_titles"
				},
				"related_links": {
					"$ref": "#/definitions/related_links"
				},
				"genre_groupings": {
					"$ref": "#/definitions/genre_groupings"
				},
				"image_link": {
					"$ref": "#/definitions/image_link"
				},
				"release_date_group": {
					"$ref": "#/definitions/release_date_group"
				},
				"master_brand_link": {
					"$ref": "#/definitions/master_brand_link"
				},
				"images_mixin": {
					"$ref": "#/definitions/images_mixin"
				},
				"alternate_images_mixin": {
					"$ref": "#/definitions/alternate_images_mixin"
				},
				"contributions_mixin": {
					"$ref": "#/definitions/contributions_mixin"
				},
				"previous_next_mixin": {
					"$ref": "#/definitions/previous_next_mixin"
				},
				"availability_mixin": {
					"$ref": "#/definitions/availability_mixin"
				}
			},
			"required": [
				"pid",
				"partner",
				"updated_time",
				"embargoed"
			],
			"additionalProperties": false
		},
		"episode": {
			"type": "object",
			"properties": {
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"updated_time": {
					"$ref": "#/definitions/updated_time"
				},
				"embargoed": {
					"$ref": "#/definitions/embargoed"
				},
				"title": {
					"$ref": "#/definitions/title"
				},
				"synopses": {
					"$ref": "#/definitions/synopses"
				},
				"uri": {
					"$ref": "#/definitions/uri"
				},
				"advertising_allowed": {
					"$ref": "#/definitions/advertising_allowed"
				},
				"presentation_title": {
					"$ref": "#/definitions/presentation_title"
				},
				"media_type": {
					"$ref": "#/definitions/media_type"
				},
				"is_stacked": {
					"$ref": "#/definitions/is_stacked"
				},
				"has_guidance": {
					"$ref": "#/definitions/has_guidance"
				},
				"episode_of": {
					"$ref": "#/definitions/episode_of"
				},
				"genre_groups": {
					"$ref": "#/definitions/genre_groups"
				},
				"ancestors": {
					"$ref": "#/definitions/ancestors"
				},
				"items_for": {
					"$ref": "#/definitions/items_for"
				},
				"programme_formats": {
					"$ref": "#/definitions/programme_formats"
				},
				"is_embeddable": {
					"$ref": "#/definitions/is_embeddable"
				},
				"ancestors_titles": {
					"$ref": "#/definitions/ancestors_titles"
				},
				"ancestor_titles": {
					"$ref": "#/definitions/ancestor_titles"
				},
				"related_links": {
					"$ref": "#/definitions/related_links"
				},
				"genre_groupings": {
					"$ref": "#/definitions/genre_groupings"
				},
				"image_link": {
					"$ref": "#/definitions/image_link"
				},
				"release_date_group": {
					"$ref": "#/definitions/release_date_group"
				},
				"master_brand_link": {
					"$ref": "#/definitions/master_brand_link"
				},
				"images_mixin": {
					"$ref": "#/definitions/images_mixin"
				},
				"alternate_images_mixin": {
					"$ref": "#/definitions/alternate_images_mixin"
				},
				"original_version_duration": {
					"$ref": "#/definitions/original_version_duration"
				},
				"contributions_mixin": {
					"$ref": "#/definitions/contributions_mixin"
				},
				"previous_next_mixin": {
					"$ref": "#/definitions/previous_next_mixin"
				},
				"availability_mixin": {
					"$ref": "#/definitions/availability_mixin"
				},
				"versions_mixin": {
					"$ref": "#/definitions/versions_mixin"
				}
			},
			"required": [
				"pid",
				"partner",
				"updated_time",
				"embargoed",
				"advertising_allowed"
			],
			"additionalProperties": false
		},
		"clip": {
			"type": "object",
			"properties": {
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"updated_time": {
					"$ref": "#/definitions/updated_time"
				},
				"embargoed": {
					"$ref": "#/definitions/embargoed"
				},
				"title": {
					"$ref": "#/definitions/title"
				},
				"synopses": {
					"$ref": "#/definitions/synopses"
				},
				"uri": {
					"$ref": "#/definitions/uri"
				},
				"advertising_allowed": {
					"$ref": "#/definitions/advertising_allowed"
				},
				"media_type": {
					"$ref": "#/definitions/media_type"
				},
				"clip_of": {
					"$ref": "#/definitions/clip_of"
				},
				"genre_groups": {
					"$ref": "#/definitions/genre_groups"
				},
				"ancestors": {
					"$ref": "#/definitions/ancestors"
				},
				"items_for": {
					"$ref": "#/definitions/items_for"
				},
				"programme_formats": {
					"$ref": "#/definitions/programme_formats"
				},
				"is_embeddable": {
					"$ref": "#/definitions/is_embeddable"
				},
				"ancestors_titles": {
					"$ref": "#/definitions/ancestors_titles"
				},
				"ancestor_titles": {
					"$ref": "#/definitions/ancestor_titles"
				},
				"related_links": {
					"$ref": "#/definitions/related_links"
				},
				"genre_groupings": {
					"$ref": "#/definitions/genre_groupings"
				},
				"image_link": {
					"$ref": "#/definitions/image_link"
				},
				"release_date_group": {
					"$ref": "#/definitions/release_date_group"
				},
				"master_brand_link": {
					"$ref": "#/definitions/master_brand_link"
				},
				"images_mixin": {
					"$ref": "#/definitions/images_mixin"
				},
				"alternate_images_mixin": {
					"$ref": "#/definitions/alternate_images_mixin"
				},
				"original_version_duration": {
					"$ref": "#/definitions/original_version_duration"
				},
				"contributions_mixin": {
					"$ref": "#/definitions/contributions_mixin"
				},
				"previous_next_mixin": {
					"$ref": "#/definitions/previous_next_mixin"
				},
				"availability_mixin": {
					"$ref": "#/definitions/availability_mixin"
				},
				"versions_mixin": {
					"$ref": "#/definitions/versions_mixin"
				}
			},
			"required": [
				"pid",
				"partner",
				"updated_time",
				"embargoed",
				"advertising_allowed"
			],
			"additionalProperties": false
		},
		"broadcast": {
			"type": "object",
			"properties": {
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"service": {
					"$ref": "#/definitions/serviceReference"
				},
				"updated_time": {
					"$ref": "#/definitions/updated_time"
				},
				"published_time": {
					"$ref": "#/definitions/published_time"
				},
				"tx_time": {
					"$ref": "#/definitions/tx_time"
				},
				"ids": {
					"$ref": "#/definitions/ids"
				},
				"is_blanked": {
					"$ref": "#/definitions/is_blanked"
				},
				"is_repeat": {
					"$ref": "#/definitions/is_repeat"
				},
				"is_audio_described": {
					"$ref": "#/definitions/is_audio_described"
				},
				"is_critical": {
					"$ref": "#/definitions/is_critical"
				},
				"is_simulcast": {
					"$ref": "#/definitions/is_simulcast"
				},
				"broadcast_of": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/broadcast_of"
					}
				},
				"ancestors_titles": {
					"$ref": "#/definitions/ancestors_titles"
				},
				"ancestor_titles": {
					"$ref": "#/definitions/ancestor_titles"
				},
				"image_link": {
					"$ref": "#/definitions/image_link"
				},
				"images_mixin": {
					"$ref": "#/definitions/images_mixin"
				}
			},
			"required": [
				"pid",
				"partner"
			],
			"additionalProperties": false
		},
		"window": {
			"type": "object",
			"properties": {
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"service": {
					"$ref": "#/definitions/serviceReference"
				},
				"updated_time": {
					"$ref": "#/definitions/updated_time"
				},
				"scheduled_time": {
					"$ref": "#/definitions/scheduled_time"
				},
				"accurate_programme_time": {
					"$ref": "#/definitions/accurate_programme_time"
				},
				"media_availability_time": {
					"$ref": "#/definitions/media_availability_time"
				},
				"ids": {
					"$ref": "#/definitions/ids"
				},
				"window_of": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/window_of"
					}
				},
				"scheduled_publication_rights": {
					"$ref": "#/definitions/scheduled_publication_rights"
				},
				"ancestors_titles": {
					"$ref": "#/definitions/ancestors_titles"
				},
				"ancestor_titles": {
					"$ref": "#/definitions/ancestor_titles"
				},
				"image_link": {
					"$ref": "#/definitions/image_link"
				},
				"images_mixin": {
					"$ref": "#/definitions/images_mixin"
				}
			},
			"required": [
				"pid",
				"partner"
			],
			"additionalProperties": false
		},
		"service": {
			"type": "object",
			"properties": {
				"sid": {
					"$ref": "#/definitions/sid"
				},
				"ids": {
					"$ref": "#/definitions/ids"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"updated_time": {
					"$ref": "#/definitions/updated_time"
				},
				"name": {
					"$ref": "#/definitions/name"
				},
				"description": {
					"$ref": "#/definitions/description"
				},
				"region": {
					"$ref": "#/definitions/region"
				},
				"type": {
					"$ref": "#/definitions/type"
				},
				"media_type": {
					"$ref": "#/definitions/media_type"
				},
				"is_concrete": {
					"$ref": "#/definitions/is_concrete"
				},
				"is_streamable": {
					"$ref": "#/definitions/is_streamable"
				},
				"is_downloadable": {
					"$ref": "#/definitions/is_downloadable"
				},
				"date_range": {
					"$ref": "#/definitions/date_range"
				},
				"master_brand_link": {
					"$ref": "#/definitions/master_brand_link"
				}
			},
			"required": [
				"sid",
				"partner"
			],
			"additionalProperties": false
		},
		"offsets": {
			"type": "object",
			"properties": {
				"offset_in": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/offset_in"
					}
				}
			},
			"additionalProperties": false
		},
		"play_events": {
			"type": "object",
			"properties": {
				"play_event": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/play_event"
					}
				}
			},
			"additionalProperties": false
		},
		"offset_in": {
			"type": "object",
			"properties": {
				"href": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				},
				"offset": {
					"type": "integer"
				},
				"position": {
					"type": "number"
				},
				"version": {
					"$ref": "#/definitions/pid"
				},
				"programme": {
					"$ref": "#/definitions/pid"
				}
			},
			"required": [
				"programme",
				"version",
				"href"
			],
			"additionalProperties": false
		},
		"play_event": {
			"type": "object",
			"properties": {
				"position": {
					"type": "number"
				},
				"offset": {
					"type": "integer"
				},
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"title": {
					"type": "string"
				},
				"synopses": {
					"$ref": "#/definitions/synopses"
				},
				"played_in_links": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/played_in_links"
					}
				}
			},
			"additionalProperties": false,
			"required": [
				"pid"
			]
		},
		"versions": {
			"type": "object",
			"properties": {
				"available": {
					"type": "integer"
				},
				"version_availability_mixin": {
					"$ref": "#/definitions/version_availability_mixin"
				}
			},
			"required": [
				"version_availability_mixin",
				"available"
			],
			"additionalProperties": false
		},
		"available_versions": {
			"type": "object",
			"properties": {
				"available": {
					"type": "integer"
				},
				"available_versions_element": {
					"$ref": "#/definitions/available_versions_element"
				}
			},
			"required": [
				"available_versions_element",
				"available"
			],
			"additionalProperties": false
		},
		"available_webcasts": {
			"type": "object",
			"properties": {
				"available": {
					"type": "integer"
				},
				"available_versions_element": {
					"$ref": "#/definitions/available_versions_element"
				}
			},
			"required": [
				"available_versions_element",
				"available"
			],
			"additionalProperties": false
		},
		"warning_texts": {
			"type": "object",
			"properties": {
				"warning_text": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"length": {
								"type": "string"
							},
							"warning_text": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"length": {
											"type": "string"
										}
									},
									"additionalProperties": false
								}
							}
						},
						"additionalProperties": false
					}
				}
			},
			"additionalProperties": false
		},
		"warning_items": {
			"type": "object",
			"properties": {
				"warning": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"warning_code": {
								"type": "string"
							},
							"short_description": {
								"type": "string"
							},
							"warning": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"warning_code": {
											"type": "string"
										},
										"short_description": {
											"type": "string"
										}
									},
									"additionalProperties": false
								}
							}
						},
						"additionalProperties": false
					}
				}
			},
			"additionalProperties": false
		},
		"contributor": {
			"type": "object",
			"properties": {
				"href": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				},
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"ids": {
					"$ref": "#/definitions/ids"
				},
				"type": {
					"$ref": "#/definitions/type"
				},
				"disambiguation": {
					"$ref": "#/definitions/disambiguation"
				},
				"contributor_to": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/contributor_to"
					}
				},
				"contributor_name": {
					"$ref": "#/definitions/contributor_name"
				}
			},
			"required": [
				"pid",
				"partner"
			],
			"additionalProperties": false
		},
		"availability": {
			"type": "object",
			"properties": {
				"status": {
					"$ref": "#/definitions/status"
				},
				"revocation_status": {
					"$ref": "#/definitions/revocation_status"
				},
				"availability_type": {
					"$ref": "#/definitions/availability_type"
				},
				"scheduled_time": {
					"$ref": "#/definitions/scheduled_time"
				},
				"media_availability_time": {
					"$ref": "#/definitions/media_availability_time"
				},
				"accurate_programme_time": {
					"$ref": "#/definitions/accurate_programme_time"
				},
				"actual_start": {
					"$ref": "#/definitions/actual_start"
				},
				"media_set": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/media_set"
					}
				},
				"availability_of": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/availability_of"
					}
				},
				"availability-debug": {
					"$ref": "#/definitions/availability-debug"
				}
			},
			"required": [
				"status",
				"availability_type"
			],
			"additionalProperties": false
		},
		"master_brand": {
			"type": "object",
			"properties": {
				"mid": {
					"$ref": "#/definitions/mid"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"name": {
					"$ref": "#/definitions/name"
				},
				"title": {
					"$ref": "#/definitions/title"
				},
				"synopses": {
					"type": "object",
					"properties": {
						"short": {
							"$ref": "#/definitions/short"
						},
						"medium": {
							"$ref": "#/definitions/medium"
						},
						"long": {
							"$ref": "#/definitions/long"
						}
					},
					"additionalProperties": false
				},
				"url_key": {
					"type": "object"
				},
				"colour": {
					"type": "object"
				},
				"position": {
					"$ref": "#/definitions/position"
				},
				"ident": {
					"type": "object"
				},
				"master_brand_date_range": {
					"type": "object",
					"properties": {
						"end": {
							"format": "date-time",
							"type": "string"
						},
						"start": {
							"format": "date-time",
							"type": "string"
						}
					},
					"additionalProperties": false
				},
				"competition_warning": {
					"type": "object",
					"properties": {
						"pid": {
							"$ref": "#/definitions/pid"
						},
						"href": {
							"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
							"type": "string"
						}
					},
					"required": [
						"href",
						"pid"
					],
					"additionalProperties": false
				},
				"image_link": {
					"$ref": "#/definitions/image_link"
				},
				"images_mixin": {
					"$ref": "#/definitions/images_mixin"
				}
			},
			"required": [
				"mid",
				"partner"
			],
			"additionalProperties": false
		},
		"related_links": {
			"type": "object",
			"properties": {
				"related_link": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/related_link"
					}
				}
			},
			"additionalProperties": false
		},
		"related_link": {
			"type": "object",
			"properties": {
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"type": {
					"$ref": "#/definitions/type"
				},
				"uri": {
					"$ref": "#/definitions/uri"
				},
				"title": {
					"$ref": "#/definitions/title"
				},
				"synopses": {
					"$ref": "#/definitions/synopses"
				},
				"position": {
					"$ref": "#/definitions/position"
				},
				"is_external": {
					"$ref": "#/definitions/is_external"
				}
			},
			"additionalProperties": false,
			"required": [
				"pid"
			]
		},
		"position": {
			"type": "integer"
		},
		"for_programmes": {
			"type": "object",
			"properties": {
				"for_programme": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/for_programme"
					}
				}
			},
			"additionalProperties": false
		},
		"for_programme": {
			"type": "object",
			"properties": {
				"href": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"pid": {
			"type": "string",
			"pattern": "([a-z0-9\\.\\-]+|.*PID.*)"
		},
		"partner": {
			"$ref": "#/definitions/pid"
		},
		"updated_time": {
			"format": "date-time",
			"type": "string"
		},
		"start_time": {
			"format": "date-time",
			"type": "string"
		},
		"end_time": {
			"format": "date-time",
			"type": "string"
		},
		"title": {
			"type": "string"
		},
		"priority": {
			"type": "integer"
		},
		"presentation_title": {
			"type": "string"
		},
		"containers_title": {
			"type": "string"
		},
		"synopses": {
			"type": "object",
			"properties": {
				"short": {
					"$ref": "#/definitions/short"
				},
				"medium": {
					"$ref": "#/definitions/medium"
				},
				"long": {
					"$ref": "#/definitions/long"
				}
			},
			"additionalProperties": false
		},
		"short": {
			"type": "string"
		},
		"medium": {
			"type": "string"
		},
		"long": {
			"type": "string"
		},
		"snippet_url": {
			"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
			"type": "string"
		},
		"release_title": {
			"type": "string",
			"minLength": 1,
			"maxLength": 255
		},
		"source_media": {
			"type": "string",
			"minLength": 1,
			"maxLength": 64
		},
		"catalogue_number": {
			"type": "string",
			"minLength": 1,
			"maxLength": 32
		},
		"record_label": {
			"type": "string",
			"minLength": 1,
			"maxLength": 255
		},
		"publisher": {
			"type": "string",
			"minLength": 1,
			"maxLength": 255
		},
		"music_code": {
			"type": "string",
			"minLength": 1,
			"maxLength": 8
		},
		"track_number": {
			"type": "string",
			"minLength": 1,
			"maxLength": 8
		},
		"track_side": {
			"type": "string",
			"minLength": 1,
			"maxLength": 8
		},
		"recording_date": {
			"type": "string",
			"minLength": 4,
			"maxLength": 10
		},
		"media_type": {
			"enum": [
				"Video",
				"Audio"
			]
		},
		"is_stacked": {
			"type": "boolean"
		},
		"programme_formats": {
			"type": "object",
			"properties": {
				"format": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/format"
					}
				}
			},
			"required": [
				"format"
			],
			"additionalProperties": false
		},
		"format": {
			"type": "object",
			"properties": {
				"format_id": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"genre_groupings": {
			"$ref": "#/definitions/genreGroupingsType"
		},
		"genre_groups": {
			"$ref": "#/definitions/genreGroupsType"
		},
		"genre_group": {
			"type": "object",
			"properties": {
				"type": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"genres": {
					"type": "object",
					"properties": {
						"genre": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/genre"
							}
						}
					},
					"additionalProperties": false
				}
			},
			"required": [
				"genres"
			],
			"additionalProperties": false
		},
		"genre": {
			"type": "object",
			"properties": {
				"type": {
					"type": "string"
				},
				"id": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"music": {
			"$ref": "#/definitions/item"
		},
		"speech": {
			"$ref": "#/definitions/item"
		},
		"chapter": {
			"$ref": "#/definitions/item"
		},
		"highlight": {
			"$ref": "#/definitions/item"
		},
		"other": {
			"$ref": "#/definitions/item"
		},
		"promotion_of": {
			"$ref": "#/definitions/pidReference"
		},
		"series_of": {
			"$ref": "#/definitions/pidReference"
		},
		"episode_of": {
			"$ref": "#/definitions/pidReference"
		},
		"clip_of": {
			"$ref": "#/definitions/pidReference"
		},
		"version_of": {
			"$ref": "#/definitions/pidReference"
		},
		"ancestors": {
			"$ref": "#/definitions/reference"
		},
		"franchises": {
			"$ref": "#/definitions/reference"
		},
		"item_of": {
			"$ref": "#/definitions/reference"
		},
		"items_for": {
			"$ref": "#/definitions/reference"
		},
		"promoted_by": {
			"type": "string"
		},
		"promoted_for": {
			"type": "string"
		},
		"context": {
			"type": "object",
			"properties": {
				"result_type": {
					"type": "string"
				},
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"href": {
					"type": "string"
				},
				"cascades_to_descendants": {
					"type": "boolean"
				}
			},
			"additionalProperties": false,
			"required": [
				"pid",
				"result_type"
			]
		},
		"ancestor_titles": {
			"type": "object",
			"properties": {
				"brand": {
					"type": "object",
					"properties": {
						"pid": {
							"$ref": "#/definitions/pid"
						},
						"title": {
							"$ref": "#/definitions/title"
						}
					},
					"required": [
						"pid"
					],
					"additionalProperties": false
				},
				"series": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"pid": {
								"$ref": "#/definitions/pid"
							},
							"title": {
								"$ref": "#/definitions/title"
							}
						},
						"required": [
							"pid"
						],
						"additionalProperties": false
					}
				},
				"episode": {
					"type": "object",
					"properties": {
						"pid": {
							"$ref": "#/definitions/pid"
						},
						"title": {
							"$ref": "#/definitions/title"
						},
						"presentation_title": {
							"$ref": "#/definitions/presentation_title"
						},
						"containers_title": {
							"$ref": "#/definitions/containers_title"
						},
						"brand": {
							"type": "object",
							"properties": {
								"pid": {
									"$ref": "#/definitions/pid"
								},
								"title": {
									"$ref": "#/definitions/title"
								}
							},
							"required": [
								"pid"
							],
							"additionalProperties": false
						},
						"series": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"pid": {
										"$ref": "#/definitions/pid"
									},
									"title": {
										"$ref": "#/definitions/title"
									}
								},
								"required": [
									"pid"
								],
								"additionalProperties": false
							}
						},
						"episode": {
							"type": "object",
							"properties": {
								"pid": {
									"$ref": "#/definitions/pid"
								},
								"title": {
									"$ref": "#/definitions/title"
								},
								"presentation_title": {
									"$ref": "#/definitions/presentation_title"
								},
								"containers_title": {
									"$ref": "#/definitions/containers_title"
								}
							},
							"required": [
								"pid"
							],
							"additionalProperties": false
						}
					},
					"required": [
						"pid"
					],
					"additionalProperties": false
				}
			},
			"additionalProperties": false
		},
		"ancestors_titles": {
			"type": "object",
			"properties": {
				"brand": {
					"type": "object",
					"properties": {
						"pid": {
							"$ref": "#/definitions/pid"
						},
						"title": {
							"$ref": "#/definitions/title"
						}
					},
					"required": [
						"pid"
					],
					"additionalProperties": false
				},
				"series": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"pid": {
								"$ref": "#/definitions/pid"
							},
							"title": {
								"$ref": "#/definitions/title"
							}
						},
						"required": [
							"pid"
						],
						"additionalProperties": false
					}
				},
				"episode": {
					"type": "object",
					"properties": {
						"pid": {
							"$ref": "#/definitions/pid"
						},
						"title": {
							"$ref": "#/definitions/title"
						},
						"presentation_title": {
							"$ref": "#/definitions/presentation_title"
						},
						"containers_title": {
							"$ref": "#/definitions/containers_title"
						},
						"brand": {
							"type": "object",
							"properties": {
								"pid": {
									"$ref": "#/definitions/pid"
								},
								"title": {
									"$ref": "#/definitions/title"
								}
							},
							"required": [
								"pid"
							],
							"additionalProperties": false
						},
						"series": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"pid": {
										"$ref": "#/definitions/pid"
									},
									"title": {
										"$ref": "#/definitions/title"
									}
								},
								"required": [
									"pid"
								],
								"additionalProperties": false
							}
						},
						"episode": {
							"type": "object",
							"properties": {
								"pid": {
									"$ref": "#/definitions/pid"
								},
								"title": {
									"$ref": "#/definitions/title"
								},
								"presentation_title": {
									"$ref": "#/definitions/presentation_title"
								},
								"containers_title": {
									"$ref": "#/definitions/containers_title"
								}
							},
							"required": [
								"pid"
							],
							"additionalProperties": false
						}
					},
					"required": [
						"pid"
					],
					"additionalProperties": false
				}
			},
			"additionalProperties": false
		},
		"expected_child_count": {
			"type": "integer"
		},
		"published_time": {
			"$ref": "#/definitions/broadcastTime"
		},
		"accurate_time": {
			"$ref": "#/definitions/broadcastTime"
		},
		"credits_time": {
			"type": "object",
			"properties": {
				"squeeze_end": {
					"format": "date-time",
					"type": "string"
				},
				"squeeze_start": {
					"format": "date-time",
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"schedule_date": {
			"pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
			"type": "string"
		},
		"is_blanked": {
			"type": "boolean"
		},
		"is_repeat": {
			"type": "boolean"
		},
		"is_signed": {
			"type": "boolean"
		},
		"is_audio_described": {
			"type": "boolean"
		},
		"is_critical": {
			"type": "boolean"
		},
		"is_simulcast": {
			"type": "boolean"
		},
		"competition_warning": {
			"type": "boolean"
		},
		"is_embeddable": {
			"type": "boolean"
		},
		"ids": {
			"type": "object",
			"properties": {
				"id": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/id"
					}
				}
			},
			"required": [
				"id"
			],
			"additionalProperties": false
		},
		"id": {
			"type": "object",
			"properties": {
				"authority": {
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"broadcast_of": {
			"$ref": "#/definitions/pidReference"
		},
		"broadcaster": {
			"type": "object",
			"properties": {
				"result_type": {
					"type": "string"
				},
				"sid": {
					"$ref": "#/definitions/sid"
				},
				"href": {
					"type": "string"
				}
			},
			"required": [
				"href",
				"sid",
				"result_type"
			],
			"additionalProperties": false
		},
		"warning_text": {
			"type": "object",
			"properties": {
				"length": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"warning": {
			"type": "object",
			"properties": {
				"warning_code": {
					"type": "string"
				},
				"short_description": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"warnings": {
			"type": "object",
			"properties": {
				"warning_text": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/warning_text"
					}
				},
				"warning": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/warning"
					}
				}
			},
			"additionalProperties": false
		},
		"has_guidance": {
			"type": "boolean"
		},
		"sid": {
			"type": "string",
			"pattern": "[a-z0-9A-Z_\\.\\-]+"
		},
		"mid": {
			"type": "string"
		},
		"name": {
			"type": "string"
		},
		"description": {
			"type": "string"
		},
		"region": {
			"type": "string"
		},
		"type": {
			"type": "string"
		},
		"is_concrete": {
			"type": "boolean"
		},
		"is_streamable": {
			"type": "boolean"
		},
		"is_downloadable": {
			"type": "boolean"
		},
		"is_external": {
			"type": "boolean"
		},
		"uri": {
			"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
			"type": "string"
		},
		"url": {
			"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
			"type": "string"
		},
		"date_range": {
			"$ref": "#/definitions/dateRange"
		},
		"tx_time": {
			"type": "object",
			"properties": {
				"credits_showing": {
					"format": "date-time",
					"type": "string"
				},
				"end": {
					"format": "date-time",
					"type": "string"
				},
				"start": {
					"format": "date-time",
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"feeds": {
			"type": "object",
			"properties": {
				"deployment_root": {
					"type": "string"
				},
				"feed": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/feed"
					}
				},
				"deprecations": {
					"$ref": "#/definitions/deprecations"
				}
			},
			"additionalProperties": false
		},
		"feed": {
			"type": "object",
			"properties": {
				"release_status": {
					"$ref": "#/definitions/release_status_type"
				},
				"title": {
					"type": "string"
				},
				"rel": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"href": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				},
				"filters": {
					"$ref": "#/definitions/filters"
				},
				"sorts": {
					"$ref": "#/definitions/sorts"
				},
				"mixins": {
					"$ref": "#/definitions/mixins"
				},
				"deprecations": {
					"$ref": "#/definitions/deprecations"
				}
			},
			"additionalProperties": false,
			"required": [
				"href",
				"name",
				"rel",
				"title"
			]
		},
		"filters": {
			"type": "object",
			"properties": {
				"filter": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/filter"
					}
				},
				"unstable_filters": {
					"$ref": "#/definitions/unstable_filters"
				}
			},
			"additionalProperties": false
		},
		"sorts": {
			"type": "object",
			"properties": {
				"sort": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/sort"
					}
				},
				"unstable_sorts": {
					"$ref": "#/definitions/unstable_sorts"
				}
			},
			"additionalProperties": false
		},
		"mixins": {
			"type": "object",
			"properties": {
				"mixin": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/mixin"
					}
				},
				"unstable_mixins": {
					"$ref": "#/definitions/unstable_mixins"
				}
			},
			"additionalProperties": false
		},
		"deprecations": {
			"type": "object",
			"properties": {
				"deprecated": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/deprecated"
					}
				}
			},
			"additionalProperties": false
		},
		"filter": {
			"type": "object",
			"properties": {
				"depends_on": {
					"type": "string"
				},
				"prefer": {
					"type": "string"
				},
				"required": {
					"type": "boolean"
				},
				"release_status": {
					"$ref": "#/definitions/release_status_type"
				},
				"type": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"multiple_values": {
					"type": "boolean"
				},
				"default": {
					"type": "string"
				},
				"min_value": {
					"type": "integer"
				},
				"max_value": {
					"type": "integer"
				},
				"replaced_by": {
					"type": "string"
				},
				"guaranteed_until": {
					"pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
					"type": "string"
				},
				"deprecated_since": {
					"pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
					"type": "string"
				},
				"deprecated": {
					"type": "boolean"
				},
				"option": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/option"
					}
				},
				"prohibits": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/prohibits"
					}
				}
			},
			"additionalProperties": false,
			"required": [
				"name",
				"title",
				"type"
			]
		},
		"unstable_filters": {
			"type": "object",
			"properties": {
				"filter": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/filter"
					}
				}
			},
			"additionalProperties": false
		},
		"unstable_mixins": {
			"type": "object",
			"properties": {
				"mixin": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/mixin"
					}
				}
			},
			"additionalProperties": false
		},
		"unstable_sorts": {
			"type": "object",
			"properties": {
				"sort": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/sort"
					}
				}
			},
			"additionalProperties": false
		},
		"option": {
			"type": "object",
			"properties": {
				"release_status": {
					"$ref": "#/definitions/release_status_type"
				},
				"title": {
					"type": "string"
				},
				"value": {
					"type": "string"
				},
				"href": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				}
			},
			"additionalProperties": false,
			"required": [
				"value",
				"title"
			]
		},
		"prohibits": {
			"type": "object",
			"properties": {
				"filter": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							}
						},
						"required": [
							"name"
						],
						"additionalProperties": false
					}
				},
				"mixin": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"filter": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										}
									},
									"required": [
										"name"
									],
									"additionalProperties": false
								}
							},
							"mixin": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"name": {
											"type": "string"
										}
									},
									"required": [
										"name"
									],
									"additionalProperties": false
								}
							}
						},
						"required": [
							"name"
						],
						"additionalProperties": false
					}
				}
			},
			"additionalProperties": false
		},
		"sort": {
			"type": "object",
			"properties": {
				"release_status": {
					"$ref": "#/definitions/release_status_type"
				},
				"replaced_by": {
					"type": "string"
				},
				"guaranteed_until": {
					"pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
					"type": "string"
				},
				"deprecated_since": {
					"pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
					"type": "string"
				},
				"deprecated": {
					"type": "boolean"
				},
				"title": {
					"type": "string"
				},
				"is_default": {
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"sort_direction": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/sort_direction"
					}
				}
			},
			"additionalProperties": false,
			"required": [
				"name",
				"title"
			]
		},
		"sort_direction": {
			"type": "object",
			"properties": {
				"href": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				},
				"is_default": {
					"type": "string"
				},
				"value": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"name",
				"value",
				"is_default",
				"href"
			],
			"additionalProperties": false
		},
		"mixin": {
			"type": "object",
			"properties": {
				"depends_on": {
					"type": "string"
				},
				"release_status": {
					"$ref": "#/definitions/release_status_type"
				},
				"replaced_by": {
					"type": "string"
				},
				"guaranteed_until": {
					"pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
					"type": "string"
				},
				"deprecated_since": {
					"pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
					"type": "string"
				},
				"deprecated": {
					"type": "boolean"
				},
				"title": {
					"type": "string"
				},
				"href": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				},
				"name": {
					"type": "string"
				},
				"dependency_on": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/dependency_on"
					}
				},
				"prohibits": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/prohibits"
					}
				}
			},
			"additionalProperties": false,
			"required": [
				"name",
				"title"
			]
		},
		"deprecated": {
			"type": "object",
			"properties": {
				"replacement_type": {
					"type": "string"
				},
				"replaced_by": {
					"type": "string"
				},
				"deprecated_since": {
					"pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"name",
				"type",
				"deprecated_since"
			],
			"additionalProperties": false
		},
		"dependency_on": {
			"type": "object",
			"properties": {
				"value": {
					"type": "string"
				},
				"filter": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"disambiguation": {
			"type": "string"
		},
		"contributor_to": {
			"type": "object",
			"properties": {
				"href": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				},
				"result_type": {
					"type": "string"
				}
			},
			"required": [
				"result_type",
				"href"
			],
			"additionalProperties": false
		},
		"status": {
			"type": "string"
		},
		"revocation_status": {
			"type": "string"
		},
		"availability_type": {
			"enum": [
				"ondemand",
				"simulcast",
				"webcast"
			]
		},
		"scheduled_time": {
			"type": "object",
			"properties": {
				"end": {
					"format": "date-time",
					"type": "string"
				},
				"start": {
					"format": "date-time",
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"actual_start": {
			"format": "date-time",
			"type": "string"
		},
		"end": {
			"format": "date-time",
			"type": "string"
		},
		"media_set": {
			"type": "string"
		},
		"availability_of": {
			"type": "object",
			"properties": {
				"type": {
					"type": "string"
				},
				"href": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				},
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"result_type": {
					"type": "string"
				}
			},
			"required": [
				"result_type",
				"pid",
				"href"
			],
			"additionalProperties": false
		},
		"accurate_programme_time": {
			"$ref": "#/definitions/dateRange"
		},
		"media_availability_time": {
			"$ref": "#/definitions/dateRange"
		},
		"window_of": {
			"$ref": "#/definitions/pidReference"
		},
		"scheduled_publication_rights": {
			"type": "object",
			"properties": {
				"publication_rights": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/publication_rights"
					}
				}
			},
			"additionalProperties": false
		},
		"publication_rights": {
			"type": "object",
			"properties": {
				"platform": {
					"type": "string"
				},
				"context": {
					"type": "string"
				},
				"transport": {
					"type": "string"
				},
				"territory": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"franchise": {
			"$ref": "#/definitions/group-body"
		},
		"season": {
			"$ref": "#/definitions/group-body"
		},
		"collection": {
			"$ref": "#/definitions/group-body"
		},
		"gallery": {
			"$ref": "#/definitions/group-body"
		},
		"scheduled": {
			"type": "object",
			"properties": {
				"end": {
					"format": "date-time",
					"type": "string"
				},
				"start": {
					"format": "date-time",
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"url_key": {
			"type": "string"
		},
		"embargoed": {
			"enum": [
				"true",
				"false"
			]
		},
		"advertising_allowed": {
			"type": "string",
			"pattern": "[a-z0-9_]+"
		},
		"availability-debug": {
			"type": "object",
			"properties": {
				"availability_of": {
					"$ref": "#/definitions/pidReference"
				},
				"service": {
					"$ref": "#/definitions/serviceReference"
				},
				"territory": {
					"type": "string"
				},
				"media_profile_groups": {
					"$ref": "#/definitions/media_profile_groups"
				}
			},
			"required": [
				"availability_of"
			],
			"additionalProperties": false
		},
		"media_profile_groups": {
			"type": "object",
			"properties": {
				"media_profile_group": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/media_profile_group"
					}
				}
			},
			"additionalProperties": false
		},
		"media_profile_group": {
			"type": "object",
			"properties": {
				"platform": {
					"type": "string"
				},
				"context": {
					"type": "string"
				},
				"transport": {
					"type": "string"
				},
				"territory": {
					"type": "string"
				},
				"pid": {
					"$ref": "#/definitions/pid"
				}
			},
			"additionalProperties": false
		},
		"image": {
			"type": "object",
			"properties": {
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"embargoed": {
					"$ref": "#/definitions/embargoed"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"title": {
					"$ref": "#/definitions/title"
				},
				"synopses": {
					"$ref": "#/definitions/synopses"
				},
				"author": {
					"type": "string"
				},
				"shoot_date": {
					"format": "date-time",
					"type": "string"
				},
				"source_asset": {
					"$ref": "#/definitions/source_asset"
				},
				"template_url": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				},
				"type": {
					"type": "string"
				}
			},
			"required": [
				"pid",
				"embargoed",
				"partner"
			],
			"additionalProperties": false
		},
		"source_asset": {
			"type": "object",
			"properties": {
				"dimensions": {
					"$ref": "#/definitions/dimensions"
				},
				"size": {
					"$ref": "#/definitions/size"
				},
				"focus_point": {
					"$ref": "#/definitions/focus_point"
				},
				"mime_type": {
					"type": "string"
				},
				"uri": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"dimensions": {
			"type": "object",
			"properties": {
				"height": {
					"type": "integer"
				},
				"width": {
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"size": {
			"type": "object",
			"properties": {
				"units": {
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"focus_point": {
			"type": "object",
			"properties": {
				"y": {
					"type": "integer"
				},
				"x": {
					"type": "integer"
				}
			},
			"additionalProperties": false
		},
		"expr": {
			"type": "string"
		},
		"datum": {
			"type": "string"
		},
		"data": {
			"type": "object",
			"properties": {
				"datum": {
					"$ref": "#/definitions/datum"
				}
			},
			"additionalProperties": false
		},
		"error-name": {
			"type": "string"
		},
		"xquery-version": {
			"enum": [
				"1.0-ml",
				"0.9-ml",
				"1.0",
				"XSLT"
			]
		},
		"code": {
			"type": "string"
		},
		"message": {
			"type": "string"
		},
		"format-string": {
			"type": "string"
		},
		"retryable": {
			"type": "boolean"
		},
		"error": {
			"type": "object",
			"properties": {
				"code": {
					"$ref": "#/definitions/code"
				},
				"error-name": {
					"$ref": "#/definitions/error-name"
				},
				"xquery-version": {
					"$ref": "#/definitions/xquery-version"
				},
				"message": {
					"$ref": "#/definitions/message"
				},
				"format-string": {
					"$ref": "#/definitions/format-string"
				},
				"retryable": {
					"$ref": "#/definitions/retryable"
				},
				"expr": {
					"$ref": "#/definitions/expr"
				},
				"data": {
					"$ref": "#/definitions/data"
				}
			},
			"required": [
				"code",
				"error-name",
				"xquery-version",
				"message",
				"format-string",
				"retryable",
				"expr",
				"data"
			],
			"additionalProperties": false
		},
		"errors": {
			"type": "object",
			"properties": {
				"error": {
					"$ref": "#/definitions/error"
				}
			},
			"additionalProperties": false
		},
		"item": {
			"type": "object",
			"properties": {
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"updated_time": {
					"$ref": "#/definitions/updated_time"
				},
				"ids": {
					"$ref": "#/definitions/ids"
				},
				"type": {
					"type": "string"
				},
				"title": {
					"$ref": "#/definitions/title"
				},
				"synopses": {
					"$ref": "#/definitions/synopses"
				},
				"release_title": {
					"$ref": "#/definitions/release_title"
				},
				"source_media": {
					"$ref": "#/definitions/source_media"
				},
				"catalogue_number": {
					"$ref": "#/definitions/catalogue_number"
				},
				"record_label": {
					"$ref": "#/definitions/record_label"
				},
				"publisher": {
					"$ref": "#/definitions/publisher"
				},
				"music_code": {
					"$ref": "#/definitions/music_code"
				},
				"track_number": {
					"$ref": "#/definitions/track_number"
				},
				"track_side": {
					"$ref": "#/definitions/track_side"
				},
				"recording_date": {
					"$ref": "#/definitions/recording_date"
				},
				"duration": {
					"type": "number"
				},
				"item_of": {
					"$ref": "#/definitions/item_of"
				},
				"offsets": {
					"$ref": "#/definitions/offsets"
				},
				"play_events": {
					"$ref": "#/definitions/play_events"
				},
				"snippet_url": {
					"$ref": "#/definitions/snippet_url"
				},
				"images_mixin": {
					"$ref": "#/definitions/images_mixin"
				},
				"contributions_mixin": {
					"$ref": "#/definitions/contributions_mixin"
				}
			},
			"required": [
				"pid",
				"partner"
			],
			"additionalProperties": false
		},
		"genreGroupingsType": {
			"type": "object",
			"properties": {
				"genre_group": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/genre_group"
					}
				}
			},
			"additionalProperties": false
		},
		"genreGroupsType": {
			"type": "object",
			"properties": {
				"genre_group": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/genre_group"
					}
				}
			},
			"additionalProperties": false
		},
		"pidReference": {
			"type": "object",
			"properties": {
				"result_type": {
					"type": "string"
				},
				"position": {
					"type": "integer"
				},
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"href": {
					"type": "string"
				}
			},
			"additionalProperties": false,
			"required": [
				"pid",
				"result_type"
			]
		},
		"referenceAttributes": {
			"type": "object",
			"properties": {
				"result_type": {
					"type": "string"
				},
				"href": {
					"type": "string"
				}
			},
			"required": [
				"href",
				"result_type"
			],
			"additionalProperties": false
		},
		"reference": {
			"type": "object",
			"properties": {
				"result_type_deprecated": {
					"type": "boolean"
				},
				"href_deprecated": {
					"type": "boolean"
				}
			},
			"additionalProperties": false
		},
		"deprecatedReferenceElement": {
			"type": "object",
			"properties": {
				"deprecationAttributes": {
					"$ref": "#/definitions/deprecationAttributes"
				}
			},
			"required": [
				"deprecationAttributes"
			],
			"additionalProperties": false
		},
		"dateRange": {
			"type": "object",
			"properties": {
				"end": {
					"format": "date-time",
					"type": "string"
				},
				"start": {
					"format": "date-time",
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"broadcastTime": {
			"type": "object",
			"properties": {
				"duration": {
					"pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"serviceReference": {
			"type": "object",
			"properties": {
				"sid": {
					"type": "string"
				},
				"href": {
					"type": "string"
				},
				"result_type": {
					"type": "string"
				}
			},
			"required": [
				"result_type",
				"href",
				"sid"
			],
			"additionalProperties": false
		},
		"group-body": {
			"type": "object",
			"properties": {
				"pid": {
					"$ref": "#/definitions/pid"
				},
				"embargoed": {
					"$ref": "#/definitions/embargoed"
				},
				"partner": {
					"$ref": "#/definitions/partner"
				},
				"updated_time": {
					"$ref": "#/definitions/updated_time"
				},
				"ids": {
					"$ref": "#/definitions/ids"
				},
				"url_key": {
					"$ref": "#/definitions/url_key"
				},
				"title": {
					"$ref": "#/definitions/title"
				},
				"synopses": {
					"$ref": "#/definitions/synopses"
				},
				"scheduled": {
					"$ref": "#/definitions/scheduled"
				},
				"for_programmes": {
					"$ref": "#/definitions/for_programmes"
				},
				"related_links": {
					"$ref": "#/definitions/related_links"
				},
				"master_brand_link": {
					"$ref": "#/definitions/master_brand_link"
				},
				"images_mixin": {
					"$ref": "#/definitions/images_mixin"
				},
				"alternate_images_mixin": {
					"$ref": "#/definitions/alternate_images_mixin"
				}
			},
			"required": [
				"pid",
				"embargoed",
				"partner",
				"updated_time"
			],
			"additionalProperties": false
		},
		"played_in_links": {
			"type": "object",
			"properties": {
				"played_in": {
					"type": "object",
					"properties": {
						"href": {
							"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
							"type": "string"
						},
						"result_type": {
							"type": "string"
						},
						"played_in": {
							"type": "object",
							"properties": {
								"href": {
									"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
									"type": "string"
								},
								"result_type": {
									"type": "string"
								}
							},
							"additionalProperties": false
						}
					},
					"additionalProperties": false
				}
			},
			"additionalProperties": false
		},
		"availability_mixin": {
			"type": "object",
			"properties": {
				"availability": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"status": {
								"$ref": "#/definitions/status"
							},
							"version_types": {
								"type": "object",
								"properties": {
									"version_type": {
										"type": "array",
										"items": {
											"type": "object",
											"properties": {
												"end": {
													"format": "date-time",
													"type": "string"
												},
												"start": {
													"format": "date-time",
													"type": "string"
												},
												"id": {
													"type": "string"
												},
												"version_type": {
													"type": "array",
													"items": {
														"type": "object",
														"properties": {
															"end": {
																"format": "date-time",
																"type": "string"
															},
															"start": {
																"format": "date-time",
																"type": "string"
															},
															"id": {
																"type": "string"
															},
															"availability": {
																"type": "array",
																"items": {
																	"type": "object",
																	"properties": {
																		"status": {
																			"$ref": "#/definitions/status"
																		},
																		"version_types": {
																			"type": "object",
																			"properties": {
																				"version_type": {
																					"type": "array",
																					"items": {
																						"type": "object",
																						"properties": {
																							"end": {
																								"format": "date-time",
																								"type": "string"
																							},
																							"start": {
																								"format": "date-time",
																								"type": "string"
																							},
																							"id": {
																								"type": "string"
																							},
																							"version_type": {
																								"type": "array",
																								"items": {
																									"type": "object",
																									"properties": {
																										"end": {
																											"format": "date-time",
																											"type": "string"
																										},
																										"start": {
																											"format": "date-time",
																											"type": "string"
																										},
																										"id": {
																											"type": "string"
																										}
																									},
																									"additionalProperties": false
																								}
																							}
																						},
																						"additionalProperties": false,
																						"required": [
																							"version_type"
																						]
																					}
																				}
																			},
																			"required": [
																				"version_type"
																			],
																			"additionalProperties": false
																		}
																	},
																	"required": [
																		"status",
																		"version_types"
																	],
																	"additionalProperties": false
																}
															}
														},
														"additionalProperties": false
													}
												}
											},
											"additionalProperties": false,
											"required": [
												"version_type"
											]
										}
									}
								},
								"required": [
									"version_type"
								],
								"additionalProperties": false
							}
						},
						"required": [
							"status",
							"version_types"
						],
						"additionalProperties": false
					}
				}
			},
			"additionalProperties": false
		},
		"versions_mixin": {
			"type": "object",
			"properties": {
				"versions": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/versions"
					}
				},
				"available_versions": {
					"$ref": "#/definitions/available_versions"
				},
				"available_webcasts": {
					"$ref": "#/definitions/available_webcasts"
				}
			},
			"additionalProperties": false
		},
		"version_availability_mixin": {
			"type": "object",
			"properties": {
				"version": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"pid": {
								"$ref": "#/definitions/pid"
							},
							"duration": {
								"pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
								"type": "string"
							},
							"competition_warning": {
								"type": "string"
							},
							"types": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"type": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									},
									"additionalProperties": false
								}
							},
							"availabilities": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"version_availability": {
											"type": "array",
											"items": {
												"$ref": "#/definitions/version_availability"
											}
										}
									},
									"required": [
										"version_availability"
									],
									"additionalProperties": false
								}
							},
							"guidance_warnings": {
								"$ref": "#/definitions/guidance_warnings"
							},
							"version": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"pid": {
											"$ref": "#/definitions/pid"
										},
										"duration": {
											"pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
											"type": "string"
										},
										"competition_warning": {
											"type": "string"
										},
										"types": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"type": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												},
												"additionalProperties": false
											}
										},
										"availabilities": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"version_availability": {
														"type": "array",
														"items": {
															"$ref": "#/definitions/version_availability"
														}
													}
												},
												"required": [
													"version_availability"
												],
												"additionalProperties": false
											}
										},
										"guidance_warnings": {
											"$ref": "#/definitions/guidance_warnings"
										}
									},
									"additionalProperties": false,
									"required": [
										"types"
									]
								}
							}
						},
						"additionalProperties": false,
						"required": [
							"types"
						]
					}
				}
			},
			"additionalProperties": false
		},
		"version_availability": {
			"type": "object",
			"properties": {
				"availability": {
					"type": "object",
					"properties": {
						"status": {
							"type": "string"
						},
						"availability_start": {
							"format": "date-time",
							"type": "string"
						},
						"availability_end": {
							"format": "date-time",
							"type": "string"
						},
						"available_media_sets": {
							"$ref": "#/definitions/available_media_sets"
						},
						"availability": {
							"type": "object",
							"properties": {
								"status": {
									"type": "string"
								},
								"availability_start": {
									"format": "date-time",
									"type": "string"
								},
								"availability_end": {
									"format": "date-time",
									"type": "string"
								},
								"available_media_sets": {
									"$ref": "#/definitions/available_media_sets"
								}
							},
							"additionalProperties": false,
							"required": [
								"available_media_sets"
							]
						}
					},
					"additionalProperties": false,
					"required": [
						"available_media_sets",
						"availability"
					]
				}
			},
			"required": [
				"availability"
			],
			"additionalProperties": false
		},
		"available_versions_element": {
			"type": "object",
			"properties": {
				"version": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"pid": {
								"$ref": "#/definitions/pid"
							},
							"duration": {
								"pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
								"type": "string"
							},
							"competition_warning": {
								"type": "boolean"
							},
							"types": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"type": {
											"type": "array",
											"items": {
												"type": "string"
											}
										}
									},
									"additionalProperties": false
								}
							},
							"guidance_warnings": {
								"$ref": "#/definitions/guidance_warnings"
							},
							"available_mixins": {
								"$ref": "#/definitions/available_mixins"
							},
							"version": {
								"type": "array",
								"items": {
									"type": "object",
									"properties": {
										"pid": {
											"$ref": "#/definitions/pid"
										},
										"duration": {
											"pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
											"type": "string"
										},
										"competition_warning": {
											"type": "boolean"
										},
										"types": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"type": {
														"type": "array",
														"items": {
															"type": "string"
														}
													}
												},
												"additionalProperties": false
											}
										},
										"guidance_warnings": {
											"$ref": "#/definitions/guidance_warnings"
										},
										"available_mixins": {
											"$ref": "#/definitions/available_mixins"
										}
									},
									"additionalProperties": false,
									"required": [
										"types"
									]
								}
							}
						},
						"additionalProperties": false,
						"required": [
							"types"
						]
					}
				}
			},
			"additionalProperties": false
		},
		"available_mixins": {
			"type": "object",
			"properties": {
				"availabilities": {
					"type": "object",
					"properties": {
						"type": {
							"type": "string"
						},
						"availability": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"payment_type": {
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"status": {
										"type": "string"
									},
									"scheduled_start": {
										"format": "date-time",
										"type": "string"
									},
									"scheduled_end": {
										"format": "date-time",
										"type": "string"
									},
									"media_availability_start": {
										"format": "date-time",
										"type": "string"
									},
									"media_availability_end": {
										"format": "date-time",
										"type": "string"
									},
									"accurate_start": {
										"format": "date-time",
										"type": "string"
									},
									"accurate_end": {
										"format": "date-time",
										"type": "string"
									},
									"available_versions_services": {
										"$ref": "#/definitions/available_versions_services"
									},
									"available_versions_media_sets": {
										"$ref": "#/definitions/available_versions_media_sets"
									}
								},
								"additionalProperties": false,
								"required": [
									"available_versions_media_sets"
								]
							}
						},
						"availabilities": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"availability": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"payment_type": {
												"type": "string"
											},
											"type": {
												"type": "string"
											},
											"status": {
												"type": "string"
											},
											"scheduled_start": {
												"format": "date-time",
												"type": "string"
											},
											"scheduled_end": {
												"format": "date-time",
												"type": "string"
											},
											"media_availability_start": {
												"format": "date-time",
												"type": "string"
											},
											"media_availability_end": {
												"format": "date-time",
												"type": "string"
											},
											"accurate_start": {
												"format": "date-time",
												"type": "string"
											},
											"accurate_end": {
												"format": "date-time",
												"type": "string"
											},
											"available_versions_services": {
												"$ref": "#/definitions/available_versions_services"
											},
											"available_versions_media_sets": {
												"$ref": "#/definitions/available_versions_media_sets"
											}
										},
										"additionalProperties": false,
										"required": [
											"available_versions_media_sets"
										]
									}
								}
							},
							"required": [
								"availability"
							],
							"additionalProperties": false
						}
					},
					"required": [
						"availability",
						"availabilities"
					],
					"additionalProperties": false
				}
			},
			"required": [
				"availabilities"
			],
			"additionalProperties": false
		},
		"version_types_with_id": {
			"type": "object",
			"properties": {
				"version_types": {
					"type": "object",
					"properties": {
						"version_type": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"version_types": {
										"type": "object",
										"properties": {
											"version_type": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														}
													},
													"additionalProperties": false
												}
											}
										},
										"required": [
											"version_type"
										],
										"additionalProperties": false
									}
								},
								"additionalProperties": false,
								"required": [
									"version_types"
								]
							}
						}
					},
					"required": [
						"version_type"
					],
					"additionalProperties": false
				}
			},
			"required": [
				"version_types"
			],
			"additionalProperties": false
		},
		"types_with_id": {
			"type": "object",
			"properties": {
				"types": {
					"type": "object",
					"properties": {
						"type": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"types": {
										"type": "object",
										"properties": {
											"type": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"id": {
															"type": "string"
														}
													},
													"additionalProperties": false
												}
											}
										},
										"required": [
											"type"
										],
										"additionalProperties": false
									}
								},
								"additionalProperties": false,
								"required": [
									"types"
								]
							}
						}
					},
					"required": [
						"type"
					],
					"additionalProperties": false
				}
			},
			"required": [
				"types"
			],
			"additionalProperties": false
		},
		"available_media_sets": {
			"type": "object",
			"properties": {
				"media_sets": {
					"type": "object",
					"properties": {
						"media_set": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"media_sets": {
										"type": "object",
										"properties": {
											"media_set": {
												"type": "array",
												"items": {
													"type": "object"
												}
											}
										},
										"required": [
											"media_set"
										],
										"additionalProperties": false
									}
								},
								"additionalProperties": false
							}
						}
					},
					"required": [
						"media_set"
					],
					"additionalProperties": false
				}
			},
			"additionalProperties": false
		},
		"available_versions_media_sets": {
			"type": "object",
			"properties": {
				"media_sets": {
					"type": "object",
					"properties": {
						"media_set": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"actual_start": {
										"format": "date-time",
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"media_sets": {
										"type": "object",
										"properties": {
											"media_set": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"actual_start": {
															"format": "date-time",
															"type": "string"
														},
														"name": {
															"type": "string"
														}
													},
													"additionalProperties": false,
													"required": [
														"name"
													]
												}
											}
										},
										"required": [
											"media_set"
										],
										"additionalProperties": false
									}
								},
								"additionalProperties": false,
								"required": [
									"name"
								]
							}
						}
					},
					"required": [
						"media_set"
					],
					"additionalProperties": false
				}
			},
			"additionalProperties": false
		},
		"available_versions_services": {
			"type": "object",
			"properties": {
				"services": {
					"type": "object",
					"properties": {
						"service": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"sid": {
										"type": "string"
									},
									"services": {
										"type": "object",
										"properties": {
											"service": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"sid": {
															"type": "string"
														}
													},
													"additionalProperties": false
												}
											}
										},
										"required": [
											"service"
										],
										"additionalProperties": false
									}
								},
								"additionalProperties": false
							}
						}
					},
					"required": [
						"service"
					],
					"additionalProperties": false
				}
			},
			"additionalProperties": false
		},
		"guidance_warnings": {
			"type": "object",
			"properties": {
				"warnings": {
					"type": "object",
					"properties": {
						"warning_texts": {
							"$ref": "#/definitions/warning_texts"
						},
						"warning_items": {
							"$ref": "#/definitions/warning_items"
						},
						"warnings": {
							"type": "object",
							"properties": {
								"warning_texts": {
									"$ref": "#/definitions/warning_texts"
								},
								"warning_items": {
									"$ref": "#/definitions/warning_items"
								}
							},
							"additionalProperties": false
						}
					},
					"additionalProperties": false
				}
			},
			"additionalProperties": false
		},
		"contributor_name": {
			"type": "object",
			"properties": {
				"name": {
					"type": "object",
					"properties": {
						"lang": {
							"type": "string"
						},
						"presentation": {
							"type": "string"
						},
						"title": {
							"type": "string"
						},
						"given": {
							"type": "string"
						},
						"family": {
							"type": "string"
						},
						"name": {
							"type": "object",
							"properties": {
								"lang": {
									"type": "string"
								},
								"presentation": {
									"type": "string"
								},
								"title": {
									"type": "string"
								},
								"given": {
									"type": "string"
								},
								"family": {
									"type": "string"
								}
							},
							"additionalProperties": false
						}
					},
					"additionalProperties": false,
					"required": [
						"name"
					]
				}
			},
			"required": [
				"name"
			],
			"additionalProperties": false
		},
		"version_group": {
			"type": "object",
			"properties": {
				"version": {
					"type": "object",
					"properties": {
						"pid": {
							"$ref": "#/definitions/pid"
						},
						"ids": {
							"$ref": "#/definitions/ids"
						},
						"aspect_ratio": {
							"type": "string"
						},
						"competition_warning": {
							"$ref": "#/definitions/competition_warning"
						},
						"duration": {
							"pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
							"type": "string"
						},
						"updated_time": {
							"$ref": "#/definitions/updated_time"
						},
						"warnings": {
							"$ref": "#/definitions/warnings"
						},
						"version_of": {
							"$ref": "#/definitions/version_of"
						},
						"version_types_with_id": {
							"$ref": "#/definitions/version_types_with_id"
						},
						"types_with_id": {
							"$ref": "#/definitions/types_with_id"
						},
						"version": {
							"type": "object",
							"properties": {
								"pid": {
									"$ref": "#/definitions/pid"
								},
								"ids": {
									"$ref": "#/definitions/ids"
								},
								"aspect_ratio": {
									"type": "string"
								},
								"competition_warning": {
									"$ref": "#/definitions/competition_warning"
								},
								"duration": {
									"pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
									"type": "string"
								},
								"updated_time": {
									"$ref": "#/definitions/updated_time"
								},
								"warnings": {
									"$ref": "#/definitions/warnings"
								},
								"version_of": {
									"$ref": "#/definitions/version_of"
								},
								"version_types_with_id": {
									"$ref": "#/definitions/version_types_with_id"
								},
								"types_with_id": {
									"$ref": "#/definitions/types_with_id"
								}
							},
							"required": [
								"pid",
								"updated_time"
							],
							"additionalProperties": false
						}
					},
					"required": [
						"pid",
						"updated_time",
						"version"
					],
					"additionalProperties": false
				}
			},
			"required": [
				"version"
			],
			"additionalProperties": false
		},
		"contributions_mixin": {
			"type": "object",
			"properties": {
				"contributions": {
					"type": "object",
					"properties": {
						"href": {
							"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
							"type": "string"
						},
						"contributions_mixin_contribution": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/contributions_mixin_contribution"
							}
						},
						"contributions": {
							"type": "object",
							"properties": {
								"href": {
									"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
									"type": "string"
								},
								"contributions_mixin_contribution": {
									"type": "array",
									"items": {
										"$ref": "#/definitions/contributions_mixin_contribution"
									}
								}
							},
							"additionalProperties": false
						}
					},
					"additionalProperties": false,
					"required": [
						"contributions"
					]
				}
			},
			"required": [
				"contributions"
			],
			"additionalProperties": false
		},
		"contributions_mixin_contribution": {
			"type": "object",
			"properties": {
				"contribution": {
					"type": "object",
					"properties": {
						"credit_role": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								}
							},
							"additionalProperties": false
						},
						"character_name": {
							"type": "string"
						},
						"contributions_mixin_contributor": {
							"$ref": "#/definitions/contributions_mixin_contributor"
						},
						"contribution": {
							"type": "object",
							"properties": {
								"credit_role": {
									"type": "object",
									"properties": {
										"id": {
											"type": "string"
										}
									},
									"additionalProperties": false
								},
								"character_name": {
									"type": "string"
								},
								"contributions_mixin_contributor": {
									"$ref": "#/definitions/contributions_mixin_contributor"
								}
							},
							"additionalProperties": false
						}
					},
					"additionalProperties": false,
					"required": [
						"contribution"
					]
				}
			},
			"required": [
				"contribution"
			],
			"additionalProperties": false
		},
		"contributions_mixin_contributor": {
			"type": "object",
			"properties": {
				"contributor": {
					"type": "object",
					"properties": {
						"href": {
							"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
							"type": "string"
						},
						"type": {
							"$ref": "#/definitions/type"
						},
						"contributions_mixin_contributor_name": {
							"$ref": "#/definitions/contributions_mixin_contributor_name"
						},
						"contributor": {
							"type": "object",
							"properties": {
								"href": {
									"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
									"type": "string"
								},
								"type": {
									"$ref": "#/definitions/type"
								},
								"contributions_mixin_contributor_name": {
									"$ref": "#/definitions/contributions_mixin_contributor_name"
								}
							},
							"additionalProperties": false
						}
					},
					"additionalProperties": false,
					"required": [
						"contributor"
					]
				}
			},
			"required": [
				"contributor"
			],
			"additionalProperties": false
		},
		"contributions_mixin_contributor_name": {
			"type": "object",
			"properties": {
				"name": {
					"type": "object",
					"properties": {
						"presentation": {
							"type": "string"
						},
						"title": {
							"type": "string"
						},
						"given": {
							"type": "string"
						},
						"family": {
							"type": "string"
						},
						"name": {
							"type": "object",
							"properties": {
								"presentation": {
									"type": "string"
								},
								"title": {
									"type": "string"
								},
								"given": {
									"type": "string"
								},
								"family": {
									"type": "string"
								}
							},
							"additionalProperties": false
						}
					},
					"additionalProperties": false,
					"required": [
						"name"
					]
				}
			},
			"required": [
				"name"
			],
			"additionalProperties": false
		},
		"previous_next_mixin": {
			"type": "object",
			"properties": {
				"previous_next": {
					"type": "object",
					"properties": {
						"previous": {
							"$ref": "#/definitions/reference"
						},
						"next": {
							"$ref": "#/definitions/reference"
						},
						"previous_next": {
							"type": "object",
							"properties": {
								"previous": {
									"$ref": "#/definitions/reference"
								},
								"next": {
									"$ref": "#/definitions/reference"
								}
							},
							"additionalProperties": false
						}
					},
					"additionalProperties": false,
					"required": [
						"previous_next"
					]
				}
			},
			"required": [
				"previous_next"
			],
			"additionalProperties": false
		},
		"release_date_group": {
			"type": "object",
			"properties": {
				"release_date": {
					"pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
					"type": "string"
				},
				"release_year_month": {
					"pattern": "[0-9]{4}-[0-9]{2}",
					"type": "string"
				},
				"release_year": {
					"pattern": "[0-9]{4}",
					"type": "string"
				}
			},
			"additionalProperties": false
		},
		"master_brand_link": {
			"type": "object",
			"properties": {
				"master_brand": {
					"type": "object",
					"properties": {
						"result_type": {
							"type": "string"
						},
						"mid": {
							"$ref": "#/definitions/mid"
						},
						"href": {
							"type": "string"
						},
						"master_brand": {
							"type": "object",
							"properties": {
								"result_type": {
									"type": "string"
								},
								"mid": {
									"$ref": "#/definitions/mid"
								},
								"href": {
									"type": "string"
								}
							},
							"required": [
								"href",
								"mid",
								"result_type"
							],
							"additionalProperties": false
						}
					},
					"required": [
						"href",
						"mid",
						"result_type",
						"master_brand"
					],
					"additionalProperties": false
				}
			},
			"required": [
				"master_brand"
			],
			"additionalProperties": false
		},
		"original_version_duration": {
			"type": "object",
			"properties": {
				"version": {
					"type": "object",
					"properties": {
						"href": {
							"type": "string"
						},
						"pid": {
							"$ref": "#/definitions/pid"
						},
						"duration": {
							"pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
							"type": "string"
						},
						"version": {
							"type": "object",
							"properties": {
								"href": {
									"type": "string"
								},
								"pid": {
									"$ref": "#/definitions/pid"
								},
								"duration": {
									"pattern": "^(-)?P(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)W)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?$",
									"type": "string"
								}
							},
							"additionalProperties": false,
							"required": [
								"pid",
								"href"
							]
						}
					},
					"additionalProperties": false,
					"required": [
						"pid",
						"href"
					]
				}
			},
			"additionalProperties": false
		},
		"image_link": {
			"type": "object",
			"properties": {
				"image": {
					"type": "object",
					"properties": {
						"template_url": {
							"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
							"type": "string"
						},
						"pid": {
							"$ref": "#/definitions/pid"
						},
						"deprecationAttributes": {
							"$ref": "#/definitions/deprecationAttributes"
						},
						"image": {
							"type": "object",
							"properties": {
								"template_url": {
									"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
									"type": "string"
								},
								"pid": {
									"$ref": "#/definitions/pid"
								},
								"deprecationAttributes": {
									"$ref": "#/definitions/deprecationAttributes"
								}
							},
							"required": [
								"deprecationAttributes",
								"template_url"
							],
							"additionalProperties": false
						}
					},
					"required": [
						"deprecationAttributes",
						"template_url",
						"image"
					],
					"additionalProperties": false
				}
			},
			"required": [
				"image"
			],
			"additionalProperties": false
		},
		"images_mixin": {
			"type": "object",
			"properties": {
				"images": {
					"type": "object",
					"properties": {
						"image": {
							"type": "object",
							"properties": {
								"template_url": {
									"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
									"type": "string"
								},
								"type": {
									"type": "string"
								},
								"href": {
									"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
									"type": "string"
								},
								"inherited_from": {
									"type": "object",
									"properties": {
										"href": {
											"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
											"type": "string"
										},
										"result_type": {
											"type": "string"
										}
									},
									"additionalProperties": false
								},
								"images": {
									"type": "object",
									"properties": {
										"image": {
											"type": "object",
											"properties": {
												"template_url": {
													"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
													"type": "string"
												},
												"type": {
													"type": "string"
												},
												"href": {
													"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
													"type": "string"
												},
												"inherited_from": {
													"type": "object",
													"properties": {
														"href": {
															"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
															"type": "string"
														},
														"result_type": {
															"type": "string"
														}
													},
													"additionalProperties": false
												}
											},
											"additionalProperties": false,
											"required": [
												"template_url"
											]
										}
									},
									"additionalProperties": false
								}
							},
							"additionalProperties": false,
							"required": [
								"template_url",
								"images"
							]
						}
					},
					"additionalProperties": false
				}
			},
			"required": [
				"images"
			],
			"additionalProperties": false
		},
		"alternate_images_mixin": {
			"type": "object",
			"properties": {
				"alternate_images": {
					"type": "object",
					"properties": {
						"alternate_image": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"template_url": {
										"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"href": {
										"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
										"type": "string"
									},
									"alternate_images": {
										"type": "object",
										"properties": {
											"alternate_image": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"template_url": {
															"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
															"type": "string"
														},
														"type": {
															"type": "string"
														},
														"href": {
															"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
															"type": "string"
														}
													},
													"additionalProperties": false,
													"required": [
														"template_url"
													]
												}
											}
										},
										"additionalProperties": false
									}
								},
								"additionalProperties": false,
								"required": [
									"template_url",
									"alternate_images"
								]
							}
						}
					},
					"additionalProperties": false
				}
			},
			"required": [
				"alternate_images"
			],
			"additionalProperties": false
		},
		"release_status_type": {
			"enum": [
				"alpha",
				"beta",
				"supported",
				"deprecated"
			]
		},
		"deprecationAttributes": {
			"type": "object",
			"properties": {
				"replaced_by": {
					"pattern": "^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(?([^#]*))?(#(.*))?",
					"type": "string"
				},
				"deprecated_since": {
					"pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}.*$",
					"type": "string"
				},
				"deprecated": {
					"type": "boolean"
				}
			},
			"required": [
				"deprecated",
				"deprecated_since",
				"replaced_by"
			],
			"additionalProperties": false
		},
		"nitro": {
			"properties": {
				"pagination": {
					"$ref": "#/definitions/pagination"
				},
				"results": {
					"$ref": "#/definitions/results"
				},
				"filters": {
					"$ref": "#/definitions/filters"
				},
				"sorts": {
					"$ref": "#/definitions/sorts"
				},
				"mixins": {
					"$ref": "#/definitions/mixins"
				},
				"deprecations": {
					"$ref": "#/definitions/deprecations"
				}
			},
			"additionalProperties": true
		},
		"ErrorModel": {
			"type": "object",
			"properties": {
				"fault": {
					"type": "object",
					"properties": {
						"faultString": {
							"type": "string"
						},
						"detail": {
							"type": "object",
							"properties": {
								"errorcode": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		}
	},
	"securityDefinitions": {
		"api_key": {
			"type": "apiKey",
			"name": "api_key",
			"in": "query"
		}
	},
	"security": [
		{
			"api_key": []
		}
	]
}